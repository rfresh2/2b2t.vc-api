{
  "reflection": [
    {
      "type": "[B"
    },
    {
      "type": "[C"
    },
    {
      "type": "[D"
    },
    {
      "type": "[F"
    },
    {
      "type": "[I"
    },
    {
      "type": "[J"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
    },
    {
      "type": "[Lcom.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry;"
    },
    {
      "type": "[Ljava.lang.Class;"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[Ljava.lang.annotation.Annotation;"
    },
    {
      "type": "[Ljava.lang.constant.ClassDesc;"
    },
    {
      "type": "[Ljava.lang.constant.ConstantDesc;"
    },
    {
      "type": "[Ljava.sql.Statement;"
    },
    {
      "type": "[Ljavax.management.openmbean.CompositeData;"
    },
    {
      "type": "[Lnet.bytebuddy.description.enumeration.EnumerationDescription;"
    },
    {
      "type": "[Lorg.jooq.CommonTableExpression;"
    },
    {
      "type": "[Lorg.jooq.DataType;"
    },
    {
      "type": "[Lorg.jooq.Field;"
    },
    {
      "type": "[Lorg.jooq.SelectField;"
    },
    {
      "type": "[Lorg.jooq.Table;"
    },
    {
      "type": "[Lorg.jooq.TableRecord;"
    },
    {
      "type": "[Lorg.jooq.Type;"
    },
    {
      "type": "[Lorg.jooq.UpdatableRecord;"
    },
    {
      "type": "[Lorg.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure;"
    },
    {
      "type": "[Lorg.springframework.core.annotation.AnnotationAttributes;"
    },
    {
      "type": "[Lorg.springframework.core.annotation.TypeMappedAnnotation;"
    },
    {
      "type": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
    },
    {
      "type": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
    },
    {
      "type": "[Lvc.data.dto.tables.records.PlaytimeMonthRecord;"
    },
    {
      "type": "[S"
    },
    {
      "type": "[Z"
    },
    {
      "type": "boolean"
    },
    {
      "type": "brave.Tracer"
    },
    {
      "type": "ch.qos.logback.classic.BasicConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.LoggerContext"
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.DateConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.LevelConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.LoggerConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.MessageConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.ThreadConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "co.elastic.clients.elasticsearch.ElasticsearchClient"
    },
    {
      "type": "co.elastic.clients.transport.ElasticsearchTransport"
    },
    {
      "type": "com.couchbase.client.java.Bucket"
    },
    {
      "type": "com.couchbase.client.java.Cluster"
    },
    {
      "type": "com.datastax.oss.driver.api.core.CqlSession"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonAutoDetect$Value"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude$Include"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude$Value"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonSetter$Value"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonTypeInfo$As"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonView"
    },
    {
      "type": "com.fasterxml.jackson.annotation.PropertyAccessor"
    },
    {
      "type": "com.fasterxml.jackson.core.Base64Variant"
    },
    {
      "type": "com.fasterxml.jackson.core.FormatSchema"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonEncoding"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonFactory"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonFactory$Feature"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator$Feature"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonParser"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonParser$Feature"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonProcessingException"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonToken"
    },
    {
      "type": "com.fasterxml.jackson.core.ObjectCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.PrettyPrinter"
    },
    {
      "type": "com.fasterxml.jackson.core.StreamReadFeature"
    },
    {
      "type": "com.fasterxml.jackson.core.StreamWriteFeature"
    },
    {
      "type": "com.fasterxml.jackson.core.TreeCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.TreeNode"
    },
    {
      "type": "com.fasterxml.jackson.core.Version"
    },
    {
      "type": "com.fasterxml.jackson.core.Versioned"
    },
    {
      "type": "com.fasterxml.jackson.core.exc.StreamReadException"
    },
    {
      "type": "com.fasterxml.jackson.core.exc.StreamWriteException"
    },
    {
      "type": "com.fasterxml.jackson.core.io.CharacterEscapes"
    },
    {
      "type": "com.fasterxml.jackson.core.type.ResolvedType"
    },
    {
      "type": "com.fasterxml.jackson.core.type.TypeReference"
    },
    {
      "type": "com.fasterxml.jackson.databind.AnnotationIntrospector"
    },
    {
      "type": "com.fasterxml.jackson.databind.DatabindException"
    },
    {
      "type": "com.fasterxml.jackson.databind.DeserializationConfig"
    },
    {
      "type": "com.fasterxml.jackson.databind.DeserializationContext"
    },
    {
      "type": "com.fasterxml.jackson.databind.DeserializationFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.InjectableValues"
    },
    {
      "type": "com.fasterxml.jackson.databind.JavaType"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonDeserializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonMappingException"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonNode"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonSerializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.KeyDeserializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.MapperFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.MappingIterator"
    },
    {
      "type": "com.fasterxml.jackson.databind.Module",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.Module$SetupContext"
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping"
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectReader"
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectWriter"
    },
    {
      "type": "com.fasterxml.jackson.databind.PropertyNamingStrategy"
    },
    {
      "type": "com.fasterxml.jackson.databind.SerializationConfig"
    },
    {
      "type": "com.fasterxml.jackson.databind.SerializationFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.SerializerProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.CacheProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.ConstructorDetector"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.ContextAttributes"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.DatatypeFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.HandlerInstantiator"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.MutableCoercionConfig"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.MutableConfigOverride"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.ValueInstantiator"
    },
    {
      "type": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider"
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.ClassIntrospector"
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver"
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.VisibilityChecker"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsonschema.JsonSchema"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.NamedType"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.SubtypeResolver"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleDeserializers"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleModule",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleSerializers"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
    },
    {
      "type": "com.fasterxml.jackson.databind.node.ArrayNode"
    },
    {
      "type": "com.fasterxml.jackson.databind.node.JsonNodeFactory"
    },
    {
      "type": "com.fasterxml.jackson.databind.node.ObjectNode"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.FilterProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.SerializerFactory"
    },
    {
      "type": "com.fasterxml.jackson.databind.type.LogicalType"
    },
    {
      "type": "com.fasterxml.jackson.databind.type.TypeFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
    },
    {
      "type": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.KotlinModule"
    },
    {
      "type": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.AsyncCache"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.AsyncCacheLoader"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.AsyncLoadingCache"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
      "fields": [
        {
          "name": "drainStatus"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BoundedLocalCache",
      "fields": [
        {
          "name": "refreshes"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Cache"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.CacheLoader"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Caffeine",
      "allDeclaredFields": true
    },
    {
      "type": "com.github.benmanes.caffeine.cache.CaffeineSpec"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Expiry"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.LoadingCache"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.PS",
      "fields": [
        {
          "name": "key"
        },
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.PSW",
      "fields": [
        {
          "name": "writeTime"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.PSWMS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.RemovalListener"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.SSMSW",
      "fields": [
        {
          "name": "FACTORY"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Scheduler"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.StripedBuffer",
      "fields": [
        {
          "name": "tableBusy"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Ticker"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Weigher"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.stats.StatsCounter"
    },
    {
      "type": "com.github.therapi.runtimejavadoc.CommentFormatter"
    },
    {
      "type": "com.google.gson.Gson"
    },
    {
      "type": "com.hazelcast.core.Hazelcast"
    },
    {
      "type": "com.hazelcast.core.HazelcastInstance"
    },
    {
      "type": "com.hazelcast.spring.cache.HazelcastCache"
    },
    {
      "type": "com.ibm.lang.management.OperatingSystemMXBean"
    },
    {
      "type": "com.intellij.junit5.JUnit5IdeaTestRunner",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.intellij.rt.execution.application.AppMainV2$Agent",
      "methods": [
        {
          "name": "premain",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.instrument.Instrumentation"
          ]
        }
      ]
    },
    {
      "type": "com.mongodb.MongoClientSettings"
    },
    {
      "type": "com.mongodb.client.MongoClient"
    },
    {
      "type": "com.mongodb.reactivestreams.client.MongoClient"
    },
    {
      "type": "com.querydsl.core.Query"
    },
    {
      "type": "com.rabbitmq.client.Channel"
    },
    {
      "type": "com.rabbitmq.client.ConnectionFactory"
    },
    {
      "type": "com.rometools.rome.feed.WireFeed"
    },
    {
      "type": "com.samskivert.mustache.Mustache"
    },
    {
      "type": "com.samskivert.mustache.Template"
    },
    {
      "type": "com.sendgrid.SendGrid"
    },
    {
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ARCFOURCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESedeCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.PBKDF2Core$HmacSHA1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.PBKDF2Core$HmacSHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.PBKDF2Core$HmacSHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.PBKDF2Core$HmacSHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsPrfGenerator$V12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.management.GarbageCollectionNotificationInfo"
    },
    {
      "type": "com.sun.management.GarbageCollectorMXBean"
    },
    {
      "type": "com.sun.management.GcInfo",
      "fields": [
        {
          "name": "builder"
        },
        {
          "name": "extAttributes"
        }
      ]
    },
    {
      "type": "com.sun.management.HotSpotDiagnosticMXBean"
    },
    {
      "type": "com.sun.management.OperatingSystemMXBean"
    },
    {
      "type": "com.sun.management.ThreadMXBean"
    },
    {
      "type": "com.sun.management.UnixOperatingSystemMXBean"
    },
    {
      "type": "com.sun.management.VMOption"
    },
    {
      "type": "com.sun.management.internal.GarbageCollectorExtImpl"
    },
    {
      "type": "com.sun.management.internal.HotSpotDiagnostic"
    },
    {
      "type": "com.sun.management.internal.HotSpotThreadImpl"
    },
    {
      "type": "com.sun.management.internal.OperatingSystemImpl"
    },
    {
      "type": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.tools.attach.VirtualMachine"
    },
    {
      "type": "com.unboundid.ldap.listener.InMemoryDirectoryServer"
    },
    {
      "type": "com.wavefront.sdk.common.WavefrontSender"
    },
    {
      "type": "com.wavefront.sdk.common.application.ApplicationTags"
    },
    {
      "type": "com.zaxxer.hikari.HikariConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setKeepaliveTime",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "setMaximumPoolSize",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setMinimumIdle",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.zaxxer.hikari.HikariConfigMXBean"
    },
    {
      "type": "com.zaxxer.hikari.HikariDataSource",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setLoginTimeout",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.zaxxer.hikari.HikariPoolMXBean"
    },
    {
      "type": "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
    },
    {
      "type": "com.zaxxer.hikari.pool.HikariProxyPreparedStatement"
    },
    {
      "type": "com.zaxxer.hikari.pool.PoolBase",
      "fields": [
        {
          "name": "catalog"
        }
      ]
    },
    {
      "type": "com.zaxxer.hikari.pool.PoolEntry",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "com.zaxxer.hikari.pool.ProxyPreparedStatement"
    },
    {
      "type": "double"
    },
    {
      "type": "freemarker.template.Configuration"
    },
    {
      "type": "graphql.GraphQL"
    },
    {
      "type": "groovy.lang.MetaClass"
    },
    {
      "type": "groovy.text.TemplateEngine"
    },
    {
      "type": "groovy.text.markup.MarkupTemplateEngine"
    },
    {
      "type": "io.github.resilience4j.bulkhead.Bulkhead"
    },
    {
      "type": "io.github.resilience4j.bulkhead.BulkheadConfig"
    },
    {
      "type": "io.github.resilience4j.bulkhead.BulkheadConfig$Builder"
    },
    {
      "type": "io.github.resilience4j.bulkhead.BulkheadRegistry"
    },
    {
      "type": "io.github.resilience4j.bulkhead.BulkheadRegistry$Builder"
    },
    {
      "type": "io.github.resilience4j.bulkhead.ThreadPoolBulkhead"
    },
    {
      "type": "io.github.resilience4j.bulkhead.ThreadPoolBulkheadConfig"
    },
    {
      "type": "io.github.resilience4j.bulkhead.ThreadPoolBulkheadConfig$Builder"
    },
    {
      "type": "io.github.resilience4j.bulkhead.ThreadPoolBulkheadRegistry"
    },
    {
      "type": "io.github.resilience4j.bulkhead.ThreadPoolBulkheadRegistry$Builder"
    },
    {
      "type": "io.github.resilience4j.bulkhead.annotation.Bulkhead"
    },
    {
      "type": "io.github.resilience4j.bulkhead.event.BulkheadEvent"
    },
    {
      "type": "io.github.resilience4j.bulkhead.internal.InMemoryBulkheadRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.bulkhead.internal.InMemoryThreadPoolBulkheadRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreaker"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreaker$State"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreakerConfig"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreakerConfig$Builder"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry$Builder"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.event.CircuitBreakerEvent"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.event.CircuitBreakerOnCallNotPermittedEvent"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.event.CircuitBreakerOnErrorEvent"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.event.CircuitBreakerOnIgnoredErrorEvent"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.event.CircuitBreakerOnSuccessEvent"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.internal.InMemoryCircuitBreakerRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.CommonProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.CompositeCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.CustomizerWithName"
    },
    {
      "type": "io.github.resilience4j.common.bulkhead.configuration.BulkheadConfigCustomizer"
    },
    {
      "type": "io.github.resilience4j.common.bulkhead.configuration.CommonBulkheadConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.bulkhead.configuration.CommonBulkheadConfigurationProperties$InstanceProperties"
    },
    {
      "type": "io.github.resilience4j.common.bulkhead.configuration.CommonThreadPoolBulkheadConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.bulkhead.configuration.CommonThreadPoolBulkheadConfigurationProperties$InstanceProperties"
    },
    {
      "type": "io.github.resilience4j.common.bulkhead.configuration.ThreadPoolBulkheadConfigCustomizer"
    },
    {
      "type": "io.github.resilience4j.common.circuitbreaker.configuration.CircuitBreakerConfigCustomizer"
    },
    {
      "type": "io.github.resilience4j.common.circuitbreaker.configuration.CommonCircuitBreakerConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.circuitbreaker.configuration.CommonCircuitBreakerConfigurationProperties$InstanceProperties"
    },
    {
      "type": "io.github.resilience4j.common.micrometer.configuration.CommonTimerConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.micrometer.configuration.CommonTimerConfigurationProperties$InstanceProperties"
    },
    {
      "type": "io.github.resilience4j.common.micrometer.configuration.TimerConfigCustomizer"
    },
    {
      "type": "io.github.resilience4j.common.ratelimiter.configuration.CommonRateLimiterConfigurationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getInstances",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.common.ratelimiter.configuration.CommonRateLimiterConfigurationProperties$InstanceProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setLimitForPeriod",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setLimitRefreshPeriod",
          "parameterTypes": [
            "java.time.Duration"
          ]
        },
        {
          "name": "setTimeoutDuration",
          "parameterTypes": [
            "java.time.Duration"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.common.ratelimiter.configuration.RateLimiterConfigCustomizer"
    },
    {
      "type": "io.github.resilience4j.common.retry.configuration.CommonRetryConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.retry.configuration.CommonRetryConfigurationProperties$InstanceProperties"
    },
    {
      "type": "io.github.resilience4j.common.retry.configuration.RetryConfigCustomizer"
    },
    {
      "type": "io.github.resilience4j.common.timelimiter.configuration.CommonTimeLimiterConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.timelimiter.configuration.CommonTimeLimiterConfigurationProperties$InstanceProperties"
    },
    {
      "type": "io.github.resilience4j.common.timelimiter.configuration.TimeLimiterConfigCustomizer"
    },
    {
      "type": "io.github.resilience4j.consumer.CircularEventConsumer"
    },
    {
      "type": "io.github.resilience4j.consumer.DefaultEventConsumerRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.consumer.EventConsumerRegistry"
    },
    {
      "type": "io.github.resilience4j.core.ConfigurationNotFoundException"
    },
    {
      "type": "io.github.resilience4j.core.ContextAwareScheduledThreadPoolExecutor"
    },
    {
      "type": "io.github.resilience4j.core.Registry"
    },
    {
      "type": "io.github.resilience4j.core.Registry$EventPublisher"
    },
    {
      "type": "io.github.resilience4j.core.functions.CheckedSupplier"
    },
    {
      "type": "io.github.resilience4j.core.metrics.MetricsPublisher"
    },
    {
      "type": "io.github.resilience4j.core.registry.AbstractRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.core.registry.CompositeRegistryEventConsumer",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.core.registry.EntryAddedEvent"
    },
    {
      "type": "io.github.resilience4j.core.registry.EntryRemovedEvent"
    },
    {
      "type": "io.github.resilience4j.core.registry.EntryReplacedEvent"
    },
    {
      "type": "io.github.resilience4j.core.registry.RegistryEventConsumer"
    },
    {
      "type": "io.github.resilience4j.micrometer.Timer"
    },
    {
      "type": "io.github.resilience4j.micrometer.TimerConfig"
    },
    {
      "type": "io.github.resilience4j.micrometer.TimerConfig$Builder"
    },
    {
      "type": "io.github.resilience4j.micrometer.TimerRegistry"
    },
    {
      "type": "io.github.resilience4j.micrometer.annotation.Timer"
    },
    {
      "type": "io.github.resilience4j.micrometer.event.TimerEvent"
    },
    {
      "type": "io.github.resilience4j.micrometer.internal.InMemoryTimerRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractBulkheadMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractCircuitBreakerMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractRateLimiterMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractRetryMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractThreadPoolBulkheadMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractTimeLimiterMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedBulkheadMetrics"
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedBulkheadMetricsPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedCircuitBreakerMetrics"
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedCircuitBreakerMetricsPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedRateLimiterMetrics"
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedRateLimiterMetricsPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedRetryMetrics"
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedRetryMetricsPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedThreadPoolBulkheadMetrics"
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedThreadPoolBulkheadMetricsPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedTimeLimiterMetrics"
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedTimeLimiterMetricsPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.ratelimiter.RateLimiter"
    },
    {
      "type": "io.github.resilience4j.ratelimiter.RateLimiterConfig"
    },
    {
      "type": "io.github.resilience4j.ratelimiter.RateLimiterConfig$Builder"
    },
    {
      "type": "io.github.resilience4j.ratelimiter.RateLimiterRegistry"
    },
    {
      "type": "io.github.resilience4j.ratelimiter.RateLimiterRegistry$Builder"
    },
    {
      "type": "io.github.resilience4j.ratelimiter.RequestNotPermitted"
    },
    {
      "type": "io.github.resilience4j.ratelimiter.annotation.RateLimiter"
    },
    {
      "type": "io.github.resilience4j.ratelimiter.event.RateLimiterEvent"
    },
    {
      "type": "io.github.resilience4j.ratelimiter.internal.InMemoryRateLimiterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.reactor.adapter.ReactorAdapter"
    },
    {
      "type": "io.github.resilience4j.retry.Retry"
    },
    {
      "type": "io.github.resilience4j.retry.RetryConfig"
    },
    {
      "type": "io.github.resilience4j.retry.RetryConfig$Builder"
    },
    {
      "type": "io.github.resilience4j.retry.RetryRegistry"
    },
    {
      "type": "io.github.resilience4j.retry.RetryRegistry$Builder"
    },
    {
      "type": "io.github.resilience4j.retry.annotation.Retry"
    },
    {
      "type": "io.github.resilience4j.retry.event.RetryEvent"
    },
    {
      "type": "io.github.resilience4j.retry.internal.InMemoryRetryRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.bulkhead.configure.BulkheadAspect",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.bulkhead.configure.BulkheadConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.bulkhead.configure.ReactorBulkheadAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.bulkhead.configure.RxJava2BulkheadAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerAspect",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.circuitbreaker.configure.ReactorCircuitBreakerAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.circuitbreaker.configure.RxJava2CircuitBreakerAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.CompletionStageFallbackDecorator",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.FallbackDecorator"
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.FallbackDecorators",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.FallbackExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.FallbackMethod"
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.ReactorFallbackDecorator"
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.RxJava2FallbackDecorator"
    },
    {
      "type": "io.github.resilience4j.spring6.micrometer.configure.ReactorTimerAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.micrometer.configure.RxJava2TimerAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.micrometer.configure.TimerAspect",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.micrometer.configure.TimerConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterAspect",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "rateLimiterAroundAdvice",
          "parameterTypes": [
            "org.aspectj.lang.ProceedingJoinPoint",
            "io.github.resilience4j.ratelimiter.annotation.RateLimiter"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.ratelimiter.configure.ReactorRateLimiterAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.ratelimiter.configure.RxJava2RateLimiterAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.retry.configure.ReactorRetryAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.retry.configure.RetryAspect",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.retry.configure.RetryConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.retry.configure.RxJava2RetryAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.spelresolver.DefaultSpelResolver",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.spelresolver.SpelResolver"
    },
    {
      "type": "io.github.resilience4j.spring6.timelimiter.configure.ReactorTimeLimiterAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.timelimiter.configure.RxJava2TimeLimiterAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterAspect",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.utils.AspectJOnClasspathCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.spring6.utils.ReactorOnClasspathCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.spring6.utils.RxJava2OnClasspathCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.AbstractBulkheadConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "bulkheadAspect",
          "parameterTypes": [
            "io.github.resilience4j.spring6.bulkhead.configure.BulkheadConfigurationProperties",
            "io.github.resilience4j.bulkhead.ThreadPoolBulkheadRegistry",
            "io.github.resilience4j.bulkhead.BulkheadRegistry",
            "java.util.List",
            "io.github.resilience4j.spring6.fallback.FallbackExecutor",
            "io.github.resilience4j.spring6.spelresolver.SpelResolver"
          ]
        },
        {
          "name": "bulkheadRegistry",
          "parameterTypes": [
            "io.github.resilience4j.spring6.bulkhead.configure.BulkheadConfigurationProperties",
            "io.github.resilience4j.consumer.EventConsumerRegistry",
            "io.github.resilience4j.core.registry.RegistryEventConsumer",
            "io.github.resilience4j.common.CompositeCustomizer"
          ]
        },
        {
          "name": "bulkheadRegistryEventConsumer",
          "parameterTypes": [
            "java.util.Optional"
          ]
        },
        {
          "name": "compositeBulkheadCustomizer",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "compositeThreadPoolBulkheadCustomizer",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "threadPoolBulkheadRegistry",
          "parameterTypes": [
            "io.github.resilience4j.common.bulkhead.configuration.CommonThreadPoolBulkheadConfigurationProperties",
            "io.github.resilience4j.consumer.EventConsumerRegistry",
            "io.github.resilience4j.core.registry.RegistryEventConsumer",
            "io.github.resilience4j.common.CompositeCustomizer"
          ]
        },
        {
          "name": "threadPoolBulkheadRegistryEventConsumer",
          "parameterTypes": [
            "java.util.Optional"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.AbstractBulkheadConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "bulkheadEventConsumerRegistry",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "taggedBulkheadMetricsPublisher",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadMetricsAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "taggedThreadPoolBulkheadMetricsPublisher",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadMetricsAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.monitoring.endpoint.BulkheadEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.monitoring.endpoint.BulkheadEventsEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.AbstractCircuitBreakerConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "circuitBreakerAspect",
          "parameterTypes": [
            "io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry",
            "java.util.List",
            "io.github.resilience4j.spring6.fallback.FallbackExecutor",
            "io.github.resilience4j.spring6.spelresolver.SpelResolver"
          ]
        },
        {
          "name": "circuitBreakerRegistry",
          "parameterTypes": [
            "io.github.resilience4j.consumer.EventConsumerRegistry",
            "io.github.resilience4j.core.registry.RegistryEventConsumer",
            "io.github.resilience4j.common.CompositeCustomizer"
          ]
        },
        {
          "name": "circuitBreakerRegistryEventConsumer",
          "parameterTypes": [
            "java.util.Optional"
          ]
        },
        {
          "name": "compositeCircuitBreakerCustomizer",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.AbstractCircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "eventConsumerRegistry",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerConfigurationProperties"
          ]
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "taggedCircuitBreakerMetricsPublisher",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint.CircuitBreakerEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint.CircuitBreakerEventsEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.monitoring.health.CircuitBreakersHealthIndicator"
    },
    {
      "type": "io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "completionStageFallbackDecorator",
          "parameterTypes": []
        },
        {
          "name": "fallbackDecorators",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "fallbackExecutor",
          "parameterTypes": [
            "io.github.resilience4j.spring6.spelresolver.SpelResolver",
            "io.github.resilience4j.spring6.fallback.FallbackDecorators"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.autoconfigure.AbstractTimerConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "compositeTimerCustomizer",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "timerAspect",
          "parameterTypes": [
            "io.github.resilience4j.spring6.micrometer.configure.TimerConfigurationProperties",
            "io.github.resilience4j.micrometer.TimerRegistry",
            "java.util.List",
            "io.github.resilience4j.spring6.fallback.FallbackExecutor",
            "io.github.resilience4j.spring6.spelresolver.SpelResolver"
          ]
        },
        {
          "name": "timerRegistry",
          "parameterTypes": [
            "io.github.resilience4j.spring6.micrometer.configure.TimerConfigurationProperties",
            "io.github.resilience4j.consumer.EventConsumerRegistry",
            "io.github.resilience4j.core.registry.RegistryEventConsumer",
            "io.github.resilience4j.common.CompositeCustomizer",
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        },
        {
          "name": "timerRegistryEventConsumer",
          "parameterTypes": [
            "java.util.Optional"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.autoconfigure.AbstractTimerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.autoconfigure.TimerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.autoconfigure.TimerAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.autoconfigure.TimerAutoConfiguration$TimerAutoEndpointConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.autoconfigure.TimerAutoConfiguration$TimerAutoEndpointConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.autoconfigure.TimerAutoConfiguration$TimerAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.autoconfigure.TimerAutoConfiguration$TimerAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.autoconfigure.TimerConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "timerEventsConsumerRegistry",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.autoconfigure.TimerConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.autoconfigure.TimerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.autoconfigure.TimerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.autoconfigure.TimerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.monitoring.endpoint.TimerEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.micrometer.monitoring.endpoint.TimerEventsEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.AbstractRateLimiterConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "compositeRateLimiterCustomizer",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "rateLimiterAspect",
          "parameterTypes": [
            "io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterConfigurationProperties",
            "io.github.resilience4j.ratelimiter.RateLimiterRegistry",
            "java.util.List",
            "io.github.resilience4j.spring6.fallback.FallbackExecutor",
            "io.github.resilience4j.spring6.spelresolver.SpelResolver"
          ]
        },
        {
          "name": "rateLimiterRegistry",
          "parameterTypes": [
            "io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterConfigurationProperties",
            "io.github.resilience4j.consumer.EventConsumerRegistry",
            "io.github.resilience4j.core.registry.RegistryEventConsumer",
            "io.github.resilience4j.common.CompositeCustomizer"
          ]
        },
        {
          "name": "rateLimiterRegistryEventConsumer",
          "parameterTypes": [
            "java.util.Optional"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.AbstractRateLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "rateLimiterEventsConsumerRegistry",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "taggedRateLimiterMetricsPublisher",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.monitoring.endpoint.RateLimiterEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.monitoring.endpoint.RateLimiterEventsEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.monitoring.health.RateLimitersHealthIndicator"
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.AbstractRetryConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "compositeRetryCustomizer",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "retryAspect",
          "parameterTypes": [
            "io.github.resilience4j.spring6.retry.configure.RetryConfigurationProperties",
            "io.github.resilience4j.retry.RetryRegistry",
            "java.util.List",
            "io.github.resilience4j.spring6.fallback.FallbackExecutor",
            "io.github.resilience4j.spring6.spelresolver.SpelResolver",
            "io.github.resilience4j.core.ContextAwareScheduledThreadPoolExecutor"
          ]
        },
        {
          "name": "retryRegistry",
          "parameterTypes": [
            "io.github.resilience4j.spring6.retry.configure.RetryConfigurationProperties",
            "io.github.resilience4j.consumer.EventConsumerRegistry",
            "io.github.resilience4j.core.registry.RegistryEventConsumer",
            "io.github.resilience4j.common.CompositeCustomizer"
          ]
        },
        {
          "name": "retryRegistryEventConsumer",
          "parameterTypes": [
            "java.util.Optional"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.AbstractRetryConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "retryEventConsumerRegistry",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "taggedRetryMetricsPublisher",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.monitoring.endpoint.RetryEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.monitoring.endpoint.RetryEventsEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "parameterNameDiscoverer",
          "parameterTypes": []
        },
        {
          "name": "spelExpressionParser",
          "parameterTypes": []
        },
        {
          "name": "spelResolver",
          "parameterTypes": [
            "org.springframework.expression.spel.standard.SpelExpressionParser",
            "org.springframework.core.ParameterNameDiscoverer",
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.AbstractTimeLimiterConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "compositeTimeLimiterCustomizer",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "timeLimiterAspect",
          "parameterTypes": [
            "io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterConfigurationProperties",
            "io.github.resilience4j.timelimiter.TimeLimiterRegistry",
            "java.util.List",
            "io.github.resilience4j.spring6.fallback.FallbackExecutor",
            "io.github.resilience4j.spring6.spelresolver.SpelResolver",
            "io.github.resilience4j.core.ContextAwareScheduledThreadPoolExecutor"
          ]
        },
        {
          "name": "timeLimiterRegistry",
          "parameterTypes": [
            "io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterConfigurationProperties",
            "io.github.resilience4j.consumer.EventConsumerRegistry",
            "io.github.resilience4j.core.registry.RegistryEventConsumer",
            "io.github.resilience4j.common.CompositeCustomizer"
          ]
        },
        {
          "name": "timeLimiterRegistryEventConsumer",
          "parameterTypes": [
            "java.util.Optional"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.AbstractTimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "timeLimiterEventsConsumerRegistry",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "taggedTimeLimiterMetricsPublisher",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.monitoring.endpoint.TimeLimiterEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.monitoring.endpoint.TimeLimiterEventsEndpoint"
    },
    {
      "type": "io.github.resilience4j.timelimiter.TimeLimiter"
    },
    {
      "type": "io.github.resilience4j.timelimiter.TimeLimiterConfig"
    },
    {
      "type": "io.github.resilience4j.timelimiter.TimeLimiterConfig$Builder"
    },
    {
      "type": "io.github.resilience4j.timelimiter.TimeLimiterRegistry"
    },
    {
      "type": "io.github.resilience4j.timelimiter.annotation.TimeLimiter"
    },
    {
      "type": "io.github.resilience4j.timelimiter.event.TimeLimiterEvent"
    },
    {
      "type": "io.github.resilience4j.timelimiter.event.TimeLimiterOnErrorEvent"
    },
    {
      "type": "io.github.resilience4j.timelimiter.event.TimeLimiterOnSuccessEvent"
    },
    {
      "type": "io.github.resilience4j.timelimiter.event.TimeLimiterOnTimeoutEvent"
    },
    {
      "type": "io.github.resilience4j.timelimiter.internal.InMemoryTimeLimiterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.lettuce.core.metrics.MicrometerCommandLatencyRecorder"
    },
    {
      "type": "io.micrometer.appoptics.AppOpticsMeterRegistry"
    },
    {
      "type": "io.micrometer.atlas.AtlasMeterRegistry"
    },
    {
      "type": "io.micrometer.common.KeyValues"
    },
    {
      "type": "io.micrometer.common.lang.NonNullApi"
    },
    {
      "type": "io.micrometer.common.lang.NonNullFields"
    },
    {
      "type": "io.micrometer.common.lang.Nullable"
    },
    {
      "type": "io.micrometer.context.ContextSnapshot"
    },
    {
      "type": "io.micrometer.context.ThreadLocalAccessor"
    },
    {
      "type": "io.micrometer.core.annotation.Timed"
    },
    {
      "type": "io.micrometer.core.instrument.Clock"
    },
    {
      "type": "io.micrometer.core.instrument.Clock$1",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.Counter"
    },
    {
      "type": "io.micrometer.core.instrument.DistributionSummary"
    },
    {
      "type": "io.micrometer.core.instrument.FunctionCounter"
    },
    {
      "type": "io.micrometer.core.instrument.FunctionTimer"
    },
    {
      "type": "io.micrometer.core.instrument.Gauge"
    },
    {
      "type": "io.micrometer.core.instrument.HighCardinalityTagsDetector"
    },
    {
      "type": "io.micrometer.core.instrument.LongTaskTimer"
    },
    {
      "type": "io.micrometer.core.instrument.Measurement"
    },
    {
      "type": "io.micrometer.core.instrument.Meter"
    },
    {
      "type": "io.micrometer.core.instrument.Meter$Id"
    },
    {
      "type": "io.micrometer.core.instrument.Meter$Type"
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "close",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry$Config"
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry$More"
    },
    {
      "type": "io.micrometer.core.instrument.Statistic"
    },
    {
      "type": "io.micrometer.core.instrument.Tag"
    },
    {
      "type": "io.micrometer.core.instrument.Tags"
    },
    {
      "type": "io.micrometer.core.instrument.TimeGauge"
    },
    {
      "type": "io.micrometer.core.instrument.Timer"
    },
    {
      "type": "io.micrometer.core.instrument.binder.MeterBinder"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.composite.CompositeMeterRegistry"
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilter"
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilter$9",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilterReply"
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterRegistryConfig"
    },
    {
      "type": "io.micrometer.core.instrument.config.NamingConvention"
    },
    {
      "type": "io.micrometer.core.instrument.config.validate.Validated"
    },
    {
      "type": "io.micrometer.core.instrument.config.validate.ValidationException"
    },
    {
      "type": "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
    },
    {
      "type": "io.micrometer.core.instrument.distribution.TimeWindowMax",
      "fields": [
        {
          "name": "rotating"
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.distribution.TimeWindowSum",
      "fields": [
        {
          "name": "rotating"
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.distribution.pause.PauseDetector"
    },
    {
      "type": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler$IgnoredMeters"
    },
    {
      "type": "io.micrometer.core.instrument.observation.MeterObservationHandler"
    },
    {
      "type": "io.micrometer.core.instrument.search.RequiredSearch"
    },
    {
      "type": "io.micrometer.core.instrument.search.Search"
    },
    {
      "type": "io.micrometer.core.instrument.simple.CountingMode"
    },
    {
      "type": "io.micrometer.core.instrument.simple.SimpleConfig"
    },
    {
      "type": "io.micrometer.core.instrument.simple.SimpleMeterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.datadog.DatadogMeterRegistry"
    },
    {
      "type": "io.micrometer.dynatrace.DynatraceMeterRegistry"
    },
    {
      "type": "io.micrometer.elastic.ElasticMeterRegistry"
    },
    {
      "type": "io.micrometer.ganglia.GangliaMeterRegistry"
    },
    {
      "type": "io.micrometer.graphite.GraphiteMeterRegistry"
    },
    {
      "type": "io.micrometer.humio.HumioMeterRegistry"
    },
    {
      "type": "io.micrometer.influx.InfluxMeterRegistry"
    },
    {
      "type": "io.micrometer.jmx.JmxMeterRegistry"
    },
    {
      "type": "io.micrometer.kairos.KairosMeterRegistry"
    },
    {
      "type": "io.micrometer.newrelic.NewRelicMeterRegistry"
    },
    {
      "type": "io.micrometer.observation.Observation"
    },
    {
      "type": "io.micrometer.observation.Observation$Context"
    },
    {
      "type": "io.micrometer.observation.Observation$Event"
    },
    {
      "type": "io.micrometer.observation.Observation$Scope"
    },
    {
      "type": "io.micrometer.observation.ObservationFilter"
    },
    {
      "type": "io.micrometer.observation.ObservationHandler"
    },
    {
      "type": "io.micrometer.observation.ObservationPredicate"
    },
    {
      "type": "io.micrometer.observation.ObservationRegistry"
    },
    {
      "type": "io.micrometer.observation.ObservationRegistry$ObservationConfig"
    },
    {
      "type": "io.micrometer.observation.SimpleObservationRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.observation.annotation.Observed"
    },
    {
      "type": "io.micrometer.observation.aop.ObservedAspect",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.prometheus.PrometheusMeterRegistry"
    },
    {
      "type": "io.micrometer.prometheusmetrics.PrometheusMeterRegistry"
    },
    {
      "type": "io.micrometer.registry.otlp.OtlpMeterRegistry"
    },
    {
      "type": "io.micrometer.signalfx.SignalFxMeterRegistry"
    },
    {
      "type": "io.micrometer.stackdriver.StackdriverMeterRegistry"
    },
    {
      "type": "io.micrometer.statsd.StatsdMeterRegistry"
    },
    {
      "type": "io.micrometer.tracing.Tracer"
    },
    {
      "type": "io.micrometer.tracing.otel.bridge.OtelTracer"
    },
    {
      "type": "io.netty.buffer.PooledByteBufAllocator"
    },
    {
      "type": "io.netty.util.NettyRuntime"
    },
    {
      "type": "io.opentelemetry.sdk.OpenTelemetrySdk"
    },
    {
      "type": "io.r2dbc.pool.ConnectionPool"
    },
    {
      "type": "io.r2dbc.proxy.ProxyConnectionFactory"
    },
    {
      "type": "io.r2dbc.spi.ConnectionFactory"
    },
    {
      "type": "io.reactivex.Flowable"
    },
    {
      "type": "io.reactivex.rxjava3.core.Flowable"
    },
    {
      "type": "io.rsocket.RSocket"
    },
    {
      "type": "io.rsocket.core.RSocketServer"
    },
    {
      "type": "io.smallrye.mutiny.Multi"
    },
    {
      "type": "io.swagger.v3.core.converter.AnnotatedType"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverter"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverterContext"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverters",
      "fields": [
        {
          "name": "converters"
        }
      ]
    },
    {
      "type": "io.swagger.v3.core.filter.OpenAPISpecFilter"
    },
    {
      "type": "io.swagger.v3.core.filter.SpecFilter",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.util.ObjectMapperFactory",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.annotations.ExternalDocumentation"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Hidden"
    },
    {
      "type": "io.swagger.v3.oas.annotations.OpenAPI31"
    },
    {
      "type": "io.swagger.v3.oas.annotations.OpenAPIDefinition"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Operation"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Parameter"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Parameters"
    },
    {
      "type": "io.swagger.v3.oas.annotations.StringToClassMapItem"
    },
    {
      "type": "io.swagger.v3.oas.annotations.extensions.Extension"
    },
    {
      "type": "io.swagger.v3.oas.annotations.extensions.ExtensionProperty"
    },
    {
      "type": "io.swagger.v3.oas.annotations.headers.Header"
    },
    {
      "type": "io.swagger.v3.oas.annotations.info.Contact"
    },
    {
      "type": "io.swagger.v3.oas.annotations.info.Info"
    },
    {
      "type": "io.swagger.v3.oas.annotations.info.License"
    },
    {
      "type": "io.swagger.v3.oas.annotations.links.Link"
    },
    {
      "type": "io.swagger.v3.oas.annotations.links.LinkParameter"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.ArraySchema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Content"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DependentRequired"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DependentSchema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DiscriminatorMapping"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Encoding"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.ExampleObject"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Schema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.SchemaProperty"
    },
    {
      "type": "io.swagger.v3.oas.annotations.parameters.RequestBody"
    },
    {
      "type": "io.swagger.v3.oas.annotations.responses.ApiResponse"
    },
    {
      "type": "io.swagger.v3.oas.annotations.responses.ApiResponses"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.OAuthFlow"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.OAuthFlows"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.OAuthScope"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.SecurityRequirement"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.SecurityScheme"
    },
    {
      "type": "io.swagger.v3.oas.annotations.servers.Server"
    },
    {
      "type": "io.swagger.v3.oas.annotations.servers.ServerVariable"
    },
    {
      "type": "io.swagger.v3.oas.annotations.tags.Tag"
    },
    {
      "type": "io.swagger.v3.oas.annotations.tags.Tags"
    },
    {
      "type": "io.swagger.v3.oas.models.Components",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.ExternalDocumentation",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.OpenAPI",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.Operation"
    },
    {
      "type": "io.swagger.v3.oas.models.PathItem"
    },
    {
      "type": "io.swagger.v3.oas.models.Paths"
    },
    {
      "type": "io.swagger.v3.oas.models.SpecVersion"
    },
    {
      "type": "io.swagger.v3.oas.models.examples.Example"
    },
    {
      "type": "io.swagger.v3.oas.models.info.Contact",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.info.Info",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.info.License",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.media.ComposedSchema"
    },
    {
      "type": "io.swagger.v3.oas.models.media.Content"
    },
    {
      "type": "io.swagger.v3.oas.models.media.MediaType"
    },
    {
      "type": "io.swagger.v3.oas.models.media.Schema"
    },
    {
      "type": "io.swagger.v3.oas.models.parameters.Parameter"
    },
    {
      "type": "io.swagger.v3.oas.models.parameters.RequestBody"
    },
    {
      "type": "io.swagger.v3.oas.models.responses.ApiResponse"
    },
    {
      "type": "io.swagger.v3.oas.models.responses.ApiResponses"
    },
    {
      "type": "io.swagger.v3.oas.models.security.Scopes"
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityRequirement",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityScheme$In"
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityScheme$Type"
    },
    {
      "type": "io.swagger.v3.oas.models.servers.Server",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.tags.Tag",
      "allDeclaredFields": true
    },
    {
      "type": "io.undertow.Undertow"
    },
    {
      "type": "io.undertow.websockets.jsr.Bootstrap"
    },
    {
      "type": "io.vavr.control.Try"
    },
    {
      "type": "jakarta.activation.MimeType"
    },
    {
      "type": "jakarta.annotation.ManagedBean"
    },
    {
      "type": "jakarta.annotation.PostConstruct"
    },
    {
      "type": "jakarta.annotation.PreDestroy"
    },
    {
      "type": "jakarta.annotation.Resource"
    },
    {
      "type": "jakarta.ejb.EJB"
    },
    {
      "type": "jakarta.ejb.TransactionAttribute"
    },
    {
      "type": "jakarta.faces.context.FacesContext"
    },
    {
      "type": "jakarta.inject.Inject"
    },
    {
      "type": "jakarta.inject.Named"
    },
    {
      "type": "jakarta.inject.Provider"
    },
    {
      "type": "jakarta.inject.Qualifier"
    },
    {
      "type": "jakarta.jms.ConnectionFactory"
    },
    {
      "type": "jakarta.jms.Message"
    },
    {
      "type": "jakarta.json.bind.Jsonb"
    },
    {
      "type": "jakarta.mail.internet.MimeMessage"
    },
    {
      "type": "jakarta.persistence.EntityManager"
    },
    {
      "type": "jakarta.persistence.EntityManagerFactory"
    },
    {
      "type": "jakarta.persistence.PersistenceContext"
    },
    {
      "type": "jakarta.servlet.DispatcherType"
    },
    {
      "type": "jakarta.servlet.Filter"
    },
    {
      "type": "jakarta.servlet.FilterChain"
    },
    {
      "type": "jakarta.servlet.FilterConfig"
    },
    {
      "type": "jakarta.servlet.FilterRegistration$Dynamic"
    },
    {
      "type": "jakarta.servlet.GenericFilter"
    },
    {
      "type": "jakarta.servlet.GenericServlet",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.MultipartConfigElement",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.Registration$Dynamic"
    },
    {
      "type": "jakarta.servlet.Servlet"
    },
    {
      "type": "jakarta.servlet.ServletConfig"
    },
    {
      "type": "jakarta.servlet.ServletContext"
    },
    {
      "type": "jakarta.servlet.ServletException"
    },
    {
      "type": "jakarta.servlet.ServletRegistration"
    },
    {
      "type": "jakarta.servlet.ServletRegistration$Dynamic"
    },
    {
      "type": "jakarta.servlet.ServletRequest"
    },
    {
      "type": "jakarta.servlet.ServletResponse"
    },
    {
      "type": "jakarta.servlet.http.HttpServlet",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.http.HttpServletRequest"
    },
    {
      "type": "jakarta.servlet.http.HttpServletResponse"
    },
    {
      "type": "jakarta.servlet.jsp.jstl.core.Config"
    },
    {
      "type": "jakarta.transaction.Transaction"
    },
    {
      "type": "jakarta.transaction.TransactionManager"
    },
    {
      "type": "jakarta.transaction.Transactional"
    },
    {
      "type": "jakarta.validation.Validator"
    },
    {
      "type": "jakarta.validation.ValidatorFactory"
    },
    {
      "type": "jakarta.validation.bootstrap.GenericBootstrap"
    },
    {
      "type": "jakarta.validation.executable.ExecutableValidator"
    },
    {
      "type": "jakarta.websocket.server.ServerContainer"
    },
    {
      "type": "jakarta.xml.bind.Binder"
    },
    {
      "type": "jakarta.xml.ws.WebServiceRef"
    },
    {
      "type": "java.io.ByteArrayOutputStream"
    },
    {
      "type": "java.io.Closeable"
    },
    {
      "type": "java.io.Console",
      "methods": [
        {
          "name": "isTerminal",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.io.DataInput"
    },
    {
      "type": "java.io.DataOutput"
    },
    {
      "type": "java.io.File"
    },
    {
      "type": "java.io.FilePermission"
    },
    {
      "type": "java.io.IOException"
    },
    {
      "type": "java.io.InputStream"
    },
    {
      "type": "java.io.ObjectInputStream"
    },
    {
      "type": "java.io.OutputStream"
    },
    {
      "type": "java.io.PrintWriter"
    },
    {
      "type": "java.io.Reader"
    },
    {
      "type": "java.io.Serializable"
    },
    {
      "type": "java.io.UnsupportedEncodingException"
    },
    {
      "type": "java.io.Writer"
    },
    {
      "type": "java.lang.AutoCloseable"
    },
    {
      "type": "java.lang.Boolean",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Byte",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.CharSequence"
    },
    {
      "type": "java.lang.Character",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getAnnotatedInterfaces",
          "parameterTypes": []
        },
        {
          "name": "getAnnotatedSuperclass",
          "parameterTypes": []
        },
        {
          "name": "getModule",
          "parameterTypes": []
        },
        {
          "name": "getNestHost",
          "parameterTypes": []
        },
        {
          "name": "getNestMembers",
          "parameterTypes": []
        },
        {
          "name": "getRecordComponents",
          "parameterTypes": []
        },
        {
          "name": "isRecord",
          "parameterTypes": []
        },
        {
          "name": "isSealed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "fields": [
        {
          "name": "classLoaderValueMap"
        }
      ],
      "methods": [
        {
          "name": "getDefinedPackage",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "registerAsParallelCapable",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader$ByteBuddyAccessor$V1"
    },
    {
      "type": "java.lang.ClassNotFoundException"
    },
    {
      "type": "java.lang.CloneNotSupportedException"
    },
    {
      "type": "java.lang.Comparable"
    },
    {
      "type": "java.lang.Deprecated"
    },
    {
      "type": "java.lang.Double",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Enum"
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.Float",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.FunctionalInterface"
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.IllegalStateException"
    },
    {
      "type": "java.lang.Integer",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.InterruptedException"
    },
    {
      "type": "java.lang.Iterable"
    },
    {
      "type": "java.lang.Long",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "canRead",
          "parameterTypes": [
            "java.lang.Module"
          ]
        },
        {
          "name": "isExported",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "isOpen",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Number",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Package"
    },
    {
      "type": "java.lang.ProcessHandle",
      "methods": [
        {
          "name": "current",
          "parameterTypes": []
        },
        {
          "name": "pid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Record",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Runnable"
    },
    {
      "type": "java.lang.Runtime",
      "methods": [
        {
          "name": "version",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Runtime$Version",
      "methods": [
        {
          "name": "feature",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.RuntimePermission"
    },
    {
      "type": "java.lang.SafeVarargs"
    },
    {
      "type": "java.lang.SecurityManager",
      "methods": [
        {
          "name": "checkPermission",
          "parameterTypes": [
            "java.security.Permission"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Short",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.StackTraceElement"
    },
    {
      "type": "java.lang.StackWalker"
    },
    {
      "type": "java.lang.StackWalker$Option"
    },
    {
      "type": "java.lang.StackWalker$StackFrame"
    },
    {
      "type": "java.lang.String",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.StringBuilder"
    },
    {
      "type": "java.lang.System",
      "methods": [
        {
          "name": "getSecurityManager",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Thread",
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ]
    },
    {
      "type": "java.lang.Thread$Builder"
    },
    {
      "type": "java.lang.Thread$State"
    },
    {
      "type": "java.lang.ThreadGroup"
    },
    {
      "type": "java.lang.Throwable"
    },
    {
      "type": "java.lang.Void",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.WeakPairMap"
    },
    {
      "type": "java.lang.WeakPairMap$Pair"
    },
    {
      "type": "java.lang.WeakPairMap$Pair$Weak"
    },
    {
      "type": "java.lang.WrongThreadException"
    },
    {
      "type": "java.lang.annotation.Annotation"
    },
    {
      "type": "java.lang.annotation.Documented"
    },
    {
      "type": "java.lang.annotation.Inherited"
    },
    {
      "type": "java.lang.annotation.Repeatable"
    },
    {
      "type": "java.lang.annotation.Retention"
    },
    {
      "type": "java.lang.annotation.Target",
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.constant.ClassDesc"
    },
    {
      "type": "java.lang.constant.Constable"
    },
    {
      "type": "java.lang.constant.ConstantDesc"
    },
    {
      "type": "java.lang.constant.DirectMethodHandleDesc"
    },
    {
      "type": "java.lang.constant.DirectMethodHandleDesc$Kind"
    },
    {
      "type": "java.lang.constant.DynamicConstantDesc"
    },
    {
      "type": "java.lang.constant.MethodHandleDesc"
    },
    {
      "type": "java.lang.constant.MethodTypeDesc"
    },
    {
      "type": "java.lang.instrument.Instrumentation",
      "methods": [
        {
          "name": "redefineModule",
          "parameterTypes": [
            "java.lang.Module",
            "java.util.Set",
            "java.util.Map",
            "java.util.Map",
            "java.util.Set",
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "java.lang.invoke.MethodHandle"
    },
    {
      "type": "java.lang.invoke.MethodHandles",
      "methods": [
        {
          "name": "lookup",
          "parameterTypes": []
        },
        {
          "name": "privateLookupIn",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.invoke.MethodHandles$Lookup"
          ]
        }
      ]
    },
    {
      "type": "java.lang.invoke.MethodHandles$Lookup",
      "methods": [
        {
          "name": "findVirtual",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.String",
            "java.lang.invoke.MethodType"
          ]
        }
      ]
    },
    {
      "type": "java.lang.invoke.MethodType",
      "methods": [
        {
          "name": "methodType",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.Class[]"
          ]
        }
      ]
    },
    {
      "type": "java.lang.invoke.SerializedLambda"
    },
    {
      "type": "java.lang.invoke.TypeDescriptor$OfField"
    },
    {
      "type": "java.lang.management.BufferPoolMXBean"
    },
    {
      "type": "java.lang.management.ClassLoadingMXBean"
    },
    {
      "type": "java.lang.management.CompilationMXBean"
    },
    {
      "type": "java.lang.management.LockInfo"
    },
    {
      "type": "java.lang.management.ManagementPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.management.MemoryMXBean"
    },
    {
      "type": "java.lang.management.MemoryManagerMXBean"
    },
    {
      "type": "java.lang.management.MemoryPoolMXBean"
    },
    {
      "type": "java.lang.management.MemoryUsage",
      "methods": [
        {
          "name": "from",
          "parameterTypes": [
            "javax.management.openmbean.CompositeData"
          ]
        }
      ]
    },
    {
      "type": "java.lang.management.MonitorInfo"
    },
    {
      "type": "java.lang.management.OperatingSystemMXBean"
    },
    {
      "type": "java.lang.management.PlatformLoggingMXBean"
    },
    {
      "type": "java.lang.management.RuntimeMXBean"
    },
    {
      "type": "java.lang.management.ThreadInfo"
    },
    {
      "type": "java.lang.management.ThreadMXBean"
    },
    {
      "type": "java.lang.reflect.AccessibleObject",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.reflect.AnnotatedArrayType",
      "methods": [
        {
          "name": "getAnnotatedGenericComponentType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.AnnotatedElement"
    },
    {
      "type": "java.lang.reflect.AnnotatedParameterizedType",
      "methods": [
        {
          "name": "getAnnotatedActualTypeArguments",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.AnnotatedType",
      "methods": [
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.AnnotatedTypeVariable"
    },
    {
      "type": "java.lang.reflect.AnnotatedWildcardType",
      "methods": [
        {
          "name": "getAnnotatedUpperBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Constructor"
    },
    {
      "type": "java.lang.reflect.Executable",
      "methods": [
        {
          "name": "getAnnotatedExceptionTypes",
          "parameterTypes": []
        },
        {
          "name": "getAnnotatedParameterTypes",
          "parameterTypes": []
        },
        {
          "name": "getAnnotatedReceiverType",
          "parameterTypes": []
        },
        {
          "name": "getParameterCount",
          "parameterTypes": []
        },
        {
          "name": "getParameters",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Field"
    },
    {
      "type": "java.lang.reflect.GenericArrayType",
      "methods": [
        {
          "name": "getGenericComponentType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.GenericDeclaration"
    },
    {
      "type": "java.lang.reflect.Method",
      "methods": [
        {
          "name": "getAnnotatedReturnType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Parameter",
      "methods": [
        {
          "name": "getModifiers",
          "parameterTypes": []
        },
        {
          "name": "isNamePresent",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.ParameterizedType",
      "methods": [
        {
          "name": "getActualTypeArguments",
          "parameterTypes": []
        },
        {
          "name": "getRawType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.RecordComponent",
      "methods": [
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Type"
    },
    {
      "type": "java.lang.reflect.TypeVariable",
      "methods": [
        {
          "name": "getAnnotatedBounds",
          "parameterTypes": []
        },
        {
          "name": "getBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.WildcardType",
      "methods": [
        {
          "name": "getLowerBounds",
          "parameterTypes": []
        },
        {
          "name": "getUpperBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.math.BigDecimal"
    },
    {
      "type": "java.math.BigInteger"
    },
    {
      "type": "java.net.InetAddress"
    },
    {
      "type": "java.net.NetPermission"
    },
    {
      "type": "java.net.Socket$SocketInputStream"
    },
    {
      "type": "java.net.SocketException",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.net.SocketPermission"
    },
    {
      "type": "java.net.URI"
    },
    {
      "type": "java.net.URL"
    },
    {
      "type": "java.net.URLPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.net.UnixDomainSocketAddress"
    },
    {
      "type": "java.net.http.HttpClient"
    },
    {
      "type": "java.nio.channels.ServerSocketChannel"
    },
    {
      "type": "java.nio.channels.SocketChannel"
    },
    {
      "type": "java.nio.charset.Charset"
    },
    {
      "type": "java.security.AccessController",
      "methods": [
        {
          "name": "doPrivileged",
          "parameterTypes": [
            "java.security.PrivilegedAction"
          ]
        },
        {
          "name": "doPrivileged",
          "parameterTypes": [
            "java.security.PrivilegedExceptionAction"
          ]
        }
      ]
    },
    {
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "type": "java.security.AllPermission"
    },
    {
      "type": "java.security.KeyStoreSpi"
    },
    {
      "type": "java.security.SecurityPermission"
    },
    {
      "type": "java.security.interfaces.ECPrivateKey"
    },
    {
      "type": "java.security.interfaces.ECPublicKey"
    },
    {
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "type": "java.sql.CallableStatement"
    },
    {
      "type": "java.sql.Connection",
      "methods": [
        {
          "name": "getMetaData",
          "parameterTypes": []
        },
        {
          "name": "prepareStatement",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.sql.ConnectionBuilder"
    },
    {
      "type": "java.sql.DatabaseMetaData"
    },
    {
      "type": "java.sql.Driver"
    },
    {
      "type": "java.sql.DriverManager"
    },
    {
      "type": "java.sql.PreparedStatement"
    },
    {
      "type": "java.sql.ResultSet"
    },
    {
      "type": "java.sql.SQLException",
      "fields": [
        {
          "name": "next"
        }
      ]
    },
    {
      "type": "java.sql.SQLFeatureNotSupportedException"
    },
    {
      "type": "java.sql.SQLWarning"
    },
    {
      "type": "java.sql.ShardingKeyBuilder"
    },
    {
      "type": "java.sql.Statement"
    },
    {
      "type": "java.sql.Wrapper"
    },
    {
      "type": "java.text.DateFormat"
    },
    {
      "type": "java.text.ListFormat"
    },
    {
      "type": "java.time.Duration"
    },
    {
      "type": "java.time.DurationEditor"
    },
    {
      "type": "java.time.Instant"
    },
    {
      "type": "java.time.LocalDate"
    },
    {
      "type": "java.util.ArrayList"
    },
    {
      "type": "java.util.Collection"
    },
    {
      "type": "java.util.Comparator"
    },
    {
      "type": "java.util.Date"
    },
    {
      "type": "java.util.EnumMap"
    },
    {
      "type": "java.util.EnumSet"
    },
    {
      "type": "java.util.Enumeration"
    },
    {
      "type": "java.util.EventListener"
    },
    {
      "type": "java.util.HashSet"
    },
    {
      "type": "java.util.Iterator"
    },
    {
      "type": "java.util.LinkedHashMap"
    },
    {
      "type": "java.util.List"
    },
    {
      "type": "java.util.Locale"
    },
    {
      "type": "java.util.Map"
    },
    {
      "type": "java.util.Map$Entry"
    },
    {
      "type": "java.util.Optional"
    },
    {
      "type": "java.util.Properties"
    },
    {
      "type": "java.util.PropertyPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.util.ServiceLoader"
    },
    {
      "type": "java.util.Set"
    },
    {
      "type": "java.util.Spliterator"
    },
    {
      "type": "java.util.TimeZone"
    },
    {
      "type": "java.util.TreeMap"
    },
    {
      "type": "java.util.UUID",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.concurrent.BlockingQueue"
    },
    {
      "type": "java.util.concurrent.Callable"
    },
    {
      "type": "java.util.concurrent.CompletableFuture"
    },
    {
      "type": "java.util.concurrent.CompletionStage"
    },
    {
      "type": "java.util.concurrent.CountDownLatch"
    },
    {
      "type": "java.util.concurrent.Executor"
    },
    {
      "type": "java.util.concurrent.ExecutorService"
    },
    {
      "type": "java.util.concurrent.ForkJoinTask",
      "fields": [
        {
          "name": "aux"
        },
        {
          "name": "status"
        }
      ]
    },
    {
      "type": "java.util.concurrent.Future"
    },
    {
      "type": "java.util.concurrent.RejectedExecutionHandler"
    },
    {
      "type": "java.util.concurrent.ScheduledExecutorService"
    },
    {
      "type": "java.util.concurrent.ThreadFactory"
    },
    {
      "type": "java.util.concurrent.ThreadPoolExecutor"
    },
    {
      "type": "java.util.concurrent.TimeUnit"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicLong"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicReference"
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "java.util.function.BiConsumer"
    },
    {
      "type": "java.util.function.BiFunction"
    },
    {
      "type": "java.util.function.BiPredicate"
    },
    {
      "type": "java.util.function.Consumer"
    },
    {
      "type": "java.util.function.Function"
    },
    {
      "type": "java.util.function.ObjIntConsumer"
    },
    {
      "type": "java.util.function.Predicate"
    },
    {
      "type": "java.util.function.Supplier"
    },
    {
      "type": "java.util.function.ToDoubleFunction"
    },
    {
      "type": "java.util.function.ToLongFunction"
    },
    {
      "type": "java.util.logging.LogManager",
      "methods": [
        {
          "name": "getLoggingMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.logging.Logger"
    },
    {
      "type": "java.util.logging.LoggingMXBean"
    },
    {
      "type": "java.util.logging.SimpleFormatter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.stream.Stream"
    },
    {
      "type": "javax.annotation.ManagedBean"
    },
    {
      "type": "javax.annotation.Nonnull"
    },
    {
      "type": "javax.annotation.PostConstruct"
    },
    {
      "type": "javax.annotation.PreDestroy"
    },
    {
      "type": "javax.annotation.Resource"
    },
    {
      "type": "javax.annotation.meta.TypeQualifier"
    },
    {
      "type": "javax.annotation.meta.TypeQualifierDefault"
    },
    {
      "type": "javax.cache.Cache"
    },
    {
      "type": "javax.cache.CacheManager"
    },
    {
      "type": "javax.cache.Caching"
    },
    {
      "type": "javax.inject.Inject"
    },
    {
      "type": "javax.inject.Named"
    },
    {
      "type": "javax.inject.Qualifier"
    },
    {
      "type": "javax.management.MBeanOperationInfo"
    },
    {
      "type": "javax.management.MBeanServerBuilder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javax.management.Notification"
    },
    {
      "type": "javax.management.NotificationEmitter"
    },
    {
      "type": "javax.management.NotificationListener"
    },
    {
      "type": "javax.management.ObjectName"
    },
    {
      "type": "javax.management.StandardEmitterMBean"
    },
    {
      "type": "javax.management.openmbean.CompositeData"
    },
    {
      "type": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
    },
    {
      "type": "javax.management.openmbean.TabularData"
    },
    {
      "type": "javax.money.MonetaryAmount"
    },
    {
      "type": "javax.naming.InitialContext"
    },
    {
      "type": "javax.naming.ldap.LdapContext"
    },
    {
      "type": "javax.persistence.Column"
    },
    {
      "type": "javax.security.auth.Subject"
    },
    {
      "type": "javax.smartcardio.CardPermission"
    },
    {
      "type": "javax.sql.CommonDataSource"
    },
    {
      "type": "javax.sql.DataSource"
    },
    {
      "type": "javax.sql.XADataSource"
    },
    {
      "type": "jdk.crac.management.CRaCMXBean"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$AppClassLoader"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$PlatformClassLoader"
    },
    {
      "type": "jdk.internal.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ],
      "methods": [
        {
          "name": "defineClass",
          "parameterTypes": [
            "java.lang.String",
            "byte[]",
            "int",
            "int",
            "java.lang.ClassLoader",
            "java.security.ProtectionDomain"
          ]
        }
      ]
    },
    {
      "type": "jdk.internal.reflect.DirectMethodHandleAccessor"
    },
    {
      "type": "jdk.internal.vm.annotation.IntrinsicCandidate"
    },
    {
      "type": "jdk.management.jfr.ConfigurationInfo"
    },
    {
      "type": "jdk.management.jfr.EventTypeInfo"
    },
    {
      "type": "jdk.management.jfr.FlightRecorderMXBean"
    },
    {
      "type": "jdk.management.jfr.FlightRecorderMXBeanImpl"
    },
    {
      "type": "jdk.management.jfr.RecordingInfo"
    },
    {
      "type": "jdk.management.jfr.SettingDescriptorInfo"
    },
    {
      "type": "kotlin.Metadata"
    },
    {
      "type": "kotlin.coroutines.Continuation"
    },
    {
      "type": "kotlin.jvm.JvmClassMappingKt"
    },
    {
      "type": "kotlinx.coroutines.flow.Flow"
    },
    {
      "type": "kotlinx.coroutines.reactor.MonoKt"
    },
    {
      "type": "kotlinx.serialization.cbor.Cbor"
    },
    {
      "type": "kotlinx.serialization.json.Json"
    },
    {
      "type": "kotlinx.serialization.protobuf.ProtoBuf"
    },
    {
      "type": "liquibase.change.DatabaseChange"
    },
    {
      "type": "liquibase.integration.spring.SpringLiquibase"
    },
    {
      "type": "me.paulschwarz.springdotenv.springboot.DotenvApplicationRunListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.SpringApplication",
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "okhttp3.OkHttpClient"
    },
    {
      "type": "oracle.jdbc.OracleConnection"
    },
    {
      "type": "oracle.ucp.jdbc.PoolDataSource"
    },
    {
      "type": "oracle.ucp.jdbc.PoolDataSourceImpl"
    },
    {
      "type": "org.aopalliance.intercept.MethodInterceptor"
    },
    {
      "type": "org.apache.catalina.Context"
    },
    {
      "type": "org.apache.catalina.Engine"
    },
    {
      "type": "org.apache.catalina.Host"
    },
    {
      "type": "org.apache.catalina.LifecycleEvent"
    },
    {
      "type": "org.apache.catalina.LifecycleListener"
    },
    {
      "type": "org.apache.catalina.Manager"
    },
    {
      "type": "org.apache.catalina.Valve"
    },
    {
      "type": "org.apache.catalina.authenticator.AuthenticatorBase"
    },
    {
      "type": "org.apache.catalina.connector.Connector"
    },
    {
      "type": "org.apache.catalina.connector.CoyoteAdapter"
    },
    {
      "type": "org.apache.catalina.core.ApplicationContextFacade"
    },
    {
      "type": "org.apache.catalina.core.ApplicationFilterChain"
    },
    {
      "type": "org.apache.catalina.core.StandardContextValve"
    },
    {
      "type": "org.apache.catalina.core.StandardEngineValve"
    },
    {
      "type": "org.apache.catalina.core.StandardHostValve"
    },
    {
      "type": "org.apache.catalina.core.StandardWrapperValve"
    },
    {
      "type": "org.apache.catalina.loader.JdbcLeakPrevention",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "clearJdbcDriverRegistrations",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.catalina.startup.Tomcat"
    },
    {
      "type": "org.apache.catalina.util.CharsetMapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.catalina.valves.ErrorReportValve"
    },
    {
      "type": "org.apache.commons.dbcp2.BasicDataSource"
    },
    {
      "type": "org.apache.commons.logging.Log"
    },
    {
      "type": "org.apache.coyote.AbstractProcessorLight"
    },
    {
      "type": "org.apache.coyote.AbstractProtocol",
      "methods": [
        {
          "name": "getAddress",
          "parameterTypes": []
        },
        {
          "name": "getLocalPort",
          "parameterTypes": []
        },
        {
          "name": "getNameIndex",
          "parameterTypes": []
        },
        {
          "name": "getProperty",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setProperty",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.apache.coyote.AbstractProtocol$ConnectionHandler"
    },
    {
      "type": "org.apache.coyote.ProtocolHandler"
    },
    {
      "type": "org.apache.coyote.UpgradeProtocol"
    },
    {
      "type": "org.apache.coyote.http11.AbstractHttp11Protocol",
      "methods": [
        {
          "name": "isSSLEnabled",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.coyote.http11.Http11NioProtocol"
    },
    {
      "type": "org.apache.coyote.http11.Http11Processor"
    },
    {
      "type": "org.apache.derby.jdbc.EmbeddedDriver"
    },
    {
      "type": "org.apache.hc.client5.http.classic.HttpClient"
    },
    {
      "type": "org.apache.hc.client5.http.impl.classic.HttpClients"
    },
    {
      "type": "org.apache.jasper.compiler.JspConfig"
    },
    {
      "type": "org.apache.jasper.servlet.JspServlet"
    },
    {
      "type": "org.apache.logging.log4j.core.LoggerContext"
    },
    {
      "type": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
    },
    {
      "type": "org.apache.logging.log4j.spi.ExtendedLogger"
    },
    {
      "type": "org.apache.logging.slf4j.SLF4JProvider"
    },
    {
      "type": "org.apache.maven.surefire.booter.ForkedBooter"
    },
    {
      "type": "org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelProcessorFactory"
    },
    {
      "type": "org.apache.maven.surefire.booter.spi.SurefireMasterProcessChannelProcessorFactory"
    },
    {
      "type": "org.apache.maven.surefire.junitplatform.JUnitPlatformProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.maven.surefire.api.provider.ProviderParameters"
          ]
        }
      ]
    },
    {
      "type": "org.apache.pulsar.client.api.PulsarClient"
    },
    {
      "type": "org.apache.tomcat.jdbc.pool.DataSource"
    },
    {
      "type": "org.apache.tomcat.util.net.AbstractEndpoint",
      "methods": [
        {
          "name": "setBindOnInit",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.apache.tomcat.util.net.NioEndpoint"
    },
    {
      "type": "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"
    },
    {
      "type": "org.apache.tomcat.util.net.SocketProcessorBase"
    },
    {
      "type": "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"
    },
    {
      "type": "org.apache.tomcat.util.threads.ThreadPoolExecutor"
    },
    {
      "type": "org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsFilter"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsSci"
    },
    {
      "type": "org.apiguardian.api.API"
    },
    {
      "type": "org.aspectj.lang.ProceedingJoinPoint"
    },
    {
      "type": "org.aspectj.lang.annotation.Around"
    },
    {
      "type": "org.aspectj.lang.annotation.Aspect"
    },
    {
      "type": "org.aspectj.lang.annotation.Pointcut"
    },
    {
      "type": "org.aspectj.weaver.Advice"
    },
    {
      "type": "org.aspectj.weaver.reflect.Java15AnnotationFinder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.Java15GenericSignatureInformationProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.aspectj.weaver.World"
          ]
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegate",
      "fields": [
        {
          "name": "myClass"
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.ReflectionVar",
      "fields": [
        {
          "name": "varType"
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.ShadowMatchImpl",
      "fields": [
        {
          "name": "residualTest"
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.tools.Jdk14TraceFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.cache2k.Cache2kBuilder"
    },
    {
      "type": "org.cache2k.extra.micrometer.Cache2kCacheMetrics"
    },
    {
      "type": "org.cache2k.extra.spring.SpringCache2kCache"
    },
    {
      "type": "org.crac.Core"
    },
    {
      "type": "org.crac.Resource"
    },
    {
      "type": "org.eclipse.core.runtime.FileLocator"
    },
    {
      "type": "org.eclipse.jetty.client.HttpClient"
    },
    {
      "type": "org.eclipse.jetty.ee10.webapp.WebAppContext"
    },
    {
      "type": "org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer"
    },
    {
      "type": "org.eclipse.jetty.server.Server"
    },
    {
      "type": "org.eclipse.jetty.util.Loader"
    },
    {
      "type": "org.elasticsearch.client.RestClient"
    },
    {
      "type": "org.elasticsearch.client.RestClientBuilder"
    },
    {
      "type": "org.flywaydb.core.Flyway"
    },
    {
      "type": "org.glassfish.jersey.micrometer.server.ObservationApplicationEventListener"
    },
    {
      "type": "org.glassfish.jersey.server.ResourceConfig"
    },
    {
      "type": "org.glassfish.jersey.server.spring.SpringComponentProvider"
    },
    {
      "type": "org.graalvm.nativeimage.ImageInfo",
      "methods": [
        {
          "name": "inImageCode",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.Driver"
    },
    {
      "type": "org.h2.server.web.JakartaWebServlet"
    },
    {
      "type": "org.hibernate.validator.messageinterpolation.ParameterMessageInterpolator"
    },
    {
      "type": "org.hsqldb.jdbc.JDBCDriver"
    },
    {
      "type": "org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
    },
    {
      "type": "org.influxdb.InfluxDB"
    },
    {
      "type": "org.jboss.logging.Logger"
    },
    {
      "type": "org.jooq.AlterDatabaseStep"
    },
    {
      "type": "org.jooq.AlterDomainStep"
    },
    {
      "type": "org.jooq.AlterIndexOnStep"
    },
    {
      "type": "org.jooq.AlterSchemaStep"
    },
    {
      "type": "org.jooq.AlterSequenceStep"
    },
    {
      "type": "org.jooq.AlterTableStep"
    },
    {
      "type": "org.jooq.AlterTypeStep"
    },
    {
      "type": "org.jooq.AlterViewStep"
    },
    {
      "type": "org.jooq.Attachable"
    },
    {
      "type": "org.jooq.Batch"
    },
    {
      "type": "org.jooq.BatchBindStep"
    },
    {
      "type": "org.jooq.BatchedCallable"
    },
    {
      "type": "org.jooq.BatchedRunnable"
    },
    {
      "type": "org.jooq.BindContext"
    },
    {
      "type": "org.jooq.Block"
    },
    {
      "type": "org.jooq.Catalog"
    },
    {
      "type": "org.jooq.CommentOnIsStep"
    },
    {
      "type": "org.jooq.CommonTableExpression"
    },
    {
      "type": "org.jooq.Condition"
    },
    {
      "type": "org.jooq.Configuration"
    },
    {
      "type": "org.jooq.ConnectionCallable"
    },
    {
      "type": "org.jooq.ConnectionProvider"
    },
    {
      "type": "org.jooq.ConnectionRunnable"
    },
    {
      "type": "org.jooq.ContextTransactionalCallable"
    },
    {
      "type": "org.jooq.ContextTransactionalRunnable"
    },
    {
      "type": "org.jooq.CreateDatabaseFinalStep"
    },
    {
      "type": "org.jooq.CreateDomainAsStep"
    },
    {
      "type": "org.jooq.CreateIndexStep"
    },
    {
      "type": "org.jooq.CreateSchemaFinalStep"
    },
    {
      "type": "org.jooq.CreateSequenceFlagsStep"
    },
    {
      "type": "org.jooq.CreateTableElementListStep"
    },
    {
      "type": "org.jooq.CreateTypeStep"
    },
    {
      "type": "org.jooq.CreateViewAsStep"
    },
    {
      "type": "org.jooq.Cursor"
    },
    {
      "type": "org.jooq.DDLExportConfiguration"
    },
    {
      "type": "org.jooq.DDLFlag"
    },
    {
      "type": "org.jooq.DSLContext"
    },
    {
      "type": "org.jooq.DataType"
    },
    {
      "type": "org.jooq.DeleteQuery"
    },
    {
      "type": "org.jooq.DeleteUsingStep"
    },
    {
      "type": "org.jooq.Domain"
    },
    {
      "type": "org.jooq.DropDatabaseFinalStep"
    },
    {
      "type": "org.jooq.DropDomainCascadeStep"
    },
    {
      "type": "org.jooq.DropIndexOnStep"
    },
    {
      "type": "org.jooq.DropSchemaStep"
    },
    {
      "type": "org.jooq.DropSequenceFinalStep"
    },
    {
      "type": "org.jooq.DropTableStep"
    },
    {
      "type": "org.jooq.DropTypeStep"
    },
    {
      "type": "org.jooq.DropViewFinalStep"
    },
    {
      "type": "org.jooq.EnumType"
    },
    {
      "type": "org.jooq.ExecuteContext"
    },
    {
      "type": "org.jooq.ExecuteEventHandler"
    },
    {
      "type": "org.jooq.ExecuteListener"
    },
    {
      "type": "org.jooq.ExecuteListenerProvider"
    },
    {
      "type": "org.jooq.Explain"
    },
    {
      "type": "org.jooq.Field"
    },
    {
      "type": "org.jooq.GrantOnStep"
    },
    {
      "type": "org.jooq.Index"
    },
    {
      "type": "org.jooq.InsertQuery"
    },
    {
      "type": "org.jooq.InsertSetStep"
    },
    {
      "type": "org.jooq.InsertValuesStep1"
    },
    {
      "type": "org.jooq.InsertValuesStep10"
    },
    {
      "type": "org.jooq.InsertValuesStep11"
    },
    {
      "type": "org.jooq.InsertValuesStep12"
    },
    {
      "type": "org.jooq.InsertValuesStep13"
    },
    {
      "type": "org.jooq.InsertValuesStep14"
    },
    {
      "type": "org.jooq.InsertValuesStep15"
    },
    {
      "type": "org.jooq.InsertValuesStep16"
    },
    {
      "type": "org.jooq.InsertValuesStep17"
    },
    {
      "type": "org.jooq.InsertValuesStep18"
    },
    {
      "type": "org.jooq.InsertValuesStep19"
    },
    {
      "type": "org.jooq.InsertValuesStep2"
    },
    {
      "type": "org.jooq.InsertValuesStep20"
    },
    {
      "type": "org.jooq.InsertValuesStep21"
    },
    {
      "type": "org.jooq.InsertValuesStep22"
    },
    {
      "type": "org.jooq.InsertValuesStep3"
    },
    {
      "type": "org.jooq.InsertValuesStep4"
    },
    {
      "type": "org.jooq.InsertValuesStep5"
    },
    {
      "type": "org.jooq.InsertValuesStep6"
    },
    {
      "type": "org.jooq.InsertValuesStep7"
    },
    {
      "type": "org.jooq.InsertValuesStep8"
    },
    {
      "type": "org.jooq.InsertValuesStep9"
    },
    {
      "type": "org.jooq.InsertValuesStepN"
    },
    {
      "type": "org.jooq.LoaderOptionsStep"
    },
    {
      "type": "org.jooq.MergeKeyStep1"
    },
    {
      "type": "org.jooq.MergeKeyStep10"
    },
    {
      "type": "org.jooq.MergeKeyStep11"
    },
    {
      "type": "org.jooq.MergeKeyStep12"
    },
    {
      "type": "org.jooq.MergeKeyStep13"
    },
    {
      "type": "org.jooq.MergeKeyStep14"
    },
    {
      "type": "org.jooq.MergeKeyStep15"
    },
    {
      "type": "org.jooq.MergeKeyStep16"
    },
    {
      "type": "org.jooq.MergeKeyStep17"
    },
    {
      "type": "org.jooq.MergeKeyStep18"
    },
    {
      "type": "org.jooq.MergeKeyStep19"
    },
    {
      "type": "org.jooq.MergeKeyStep2"
    },
    {
      "type": "org.jooq.MergeKeyStep20"
    },
    {
      "type": "org.jooq.MergeKeyStep21"
    },
    {
      "type": "org.jooq.MergeKeyStep22"
    },
    {
      "type": "org.jooq.MergeKeyStep3"
    },
    {
      "type": "org.jooq.MergeKeyStep4"
    },
    {
      "type": "org.jooq.MergeKeyStep5"
    },
    {
      "type": "org.jooq.MergeKeyStep6"
    },
    {
      "type": "org.jooq.MergeKeyStep7"
    },
    {
      "type": "org.jooq.MergeKeyStep8"
    },
    {
      "type": "org.jooq.MergeKeyStep9"
    },
    {
      "type": "org.jooq.MergeKeyStepN"
    },
    {
      "type": "org.jooq.MergeUsingStep"
    },
    {
      "type": "org.jooq.Meta"
    },
    {
      "type": "org.jooq.Migrations"
    },
    {
      "type": "org.jooq.Name"
    },
    {
      "type": "org.jooq.Param"
    },
    {
      "type": "org.jooq.Parser"
    },
    {
      "type": "org.jooq.PlainSQL"
    },
    {
      "type": "org.jooq.Privilege"
    },
    {
      "type": "org.jooq.Publisher"
    },
    {
      "type": "org.jooq.Queries"
    },
    {
      "type": "org.jooq.Query"
    },
    {
      "type": "org.jooq.QueryPart"
    },
    {
      "type": "org.jooq.Record"
    },
    {
      "type": "org.jooq.Record1"
    },
    {
      "type": "org.jooq.Record10"
    },
    {
      "type": "org.jooq.Record11"
    },
    {
      "type": "org.jooq.Record12"
    },
    {
      "type": "org.jooq.Record13"
    },
    {
      "type": "org.jooq.Record14"
    },
    {
      "type": "org.jooq.Record15"
    },
    {
      "type": "org.jooq.Record16"
    },
    {
      "type": "org.jooq.Record17"
    },
    {
      "type": "org.jooq.Record18"
    },
    {
      "type": "org.jooq.Record19"
    },
    {
      "type": "org.jooq.Record2"
    },
    {
      "type": "org.jooq.Record20"
    },
    {
      "type": "org.jooq.Record21"
    },
    {
      "type": "org.jooq.Record22"
    },
    {
      "type": "org.jooq.Record3"
    },
    {
      "type": "org.jooq.Record4"
    },
    {
      "type": "org.jooq.Record5"
    },
    {
      "type": "org.jooq.Record6"
    },
    {
      "type": "org.jooq.Record7"
    },
    {
      "type": "org.jooq.Record8"
    },
    {
      "type": "org.jooq.Record9"
    },
    {
      "type": "org.jooq.RenderContext"
    },
    {
      "type": "org.jooq.Result"
    },
    {
      "type": "org.jooq.ResultQuery"
    },
    {
      "type": "org.jooq.Results"
    },
    {
      "type": "org.jooq.RevokeOnStep"
    },
    {
      "type": "org.jooq.RollbackToSavepointStep"
    },
    {
      "type": "org.jooq.RowCountQuery"
    },
    {
      "type": "org.jooq.SQL"
    },
    {
      "type": "org.jooq.SQLDialect"
    },
    {
      "type": "org.jooq.Schema"
    },
    {
      "type": "org.jooq.Scope"
    },
    {
      "type": "org.jooq.Select"
    },
    {
      "type": "org.jooq.SelectField"
    },
    {
      "type": "org.jooq.SelectFieldOrAsterisk"
    },
    {
      "type": "org.jooq.SelectQuery"
    },
    {
      "type": "org.jooq.SelectSelectStep"
    },
    {
      "type": "org.jooq.SelectWhereStep"
    },
    {
      "type": "org.jooq.Sequence"
    },
    {
      "type": "org.jooq.Source"
    },
    {
      "type": "org.jooq.Statement"
    },
    {
      "type": "org.jooq.Support"
    },
    {
      "type": "org.jooq.Table"
    },
    {
      "type": "org.jooq.TableField"
    },
    {
      "type": "org.jooq.TableLike"
    },
    {
      "type": "org.jooq.TableRecord"
    },
    {
      "type": "org.jooq.TransactionContext"
    },
    {
      "type": "org.jooq.TransactionProvider"
    },
    {
      "type": "org.jooq.TransactionalCallable"
    },
    {
      "type": "org.jooq.TransactionalPublishable"
    },
    {
      "type": "org.jooq.TransactionalRunnable"
    },
    {
      "type": "org.jooq.TruncateIdentityStep"
    },
    {
      "type": "org.jooq.Type"
    },
    {
      "type": "org.jooq.UDT"
    },
    {
      "type": "org.jooq.UDTRecord"
    },
    {
      "type": "org.jooq.UpdatableRecord"
    },
    {
      "type": "org.jooq.UpdateQuery"
    },
    {
      "type": "org.jooq.UpdateSetFirstStep"
    },
    {
      "type": "org.jooq.WithAsStep"
    },
    {
      "type": "org.jooq.WithAsStep1"
    },
    {
      "type": "org.jooq.WithAsStep10"
    },
    {
      "type": "org.jooq.WithAsStep11"
    },
    {
      "type": "org.jooq.WithAsStep12"
    },
    {
      "type": "org.jooq.WithAsStep13"
    },
    {
      "type": "org.jooq.WithAsStep14"
    },
    {
      "type": "org.jooq.WithAsStep15"
    },
    {
      "type": "org.jooq.WithAsStep16"
    },
    {
      "type": "org.jooq.WithAsStep17"
    },
    {
      "type": "org.jooq.WithAsStep18"
    },
    {
      "type": "org.jooq.WithAsStep19"
    },
    {
      "type": "org.jooq.WithAsStep2"
    },
    {
      "type": "org.jooq.WithAsStep20"
    },
    {
      "type": "org.jooq.WithAsStep21"
    },
    {
      "type": "org.jooq.WithAsStep22"
    },
    {
      "type": "org.jooq.WithAsStep3"
    },
    {
      "type": "org.jooq.WithAsStep4"
    },
    {
      "type": "org.jooq.WithAsStep5"
    },
    {
      "type": "org.jooq.WithAsStep6"
    },
    {
      "type": "org.jooq.WithAsStep7"
    },
    {
      "type": "org.jooq.WithAsStep8"
    },
    {
      "type": "org.jooq.WithAsStep9"
    },
    {
      "type": "org.jooq.WithStep"
    },
    {
      "type": "org.jooq.conf.Settings"
    },
    {
      "type": "org.jooq.exception.DataAccessException"
    },
    {
      "type": "org.jooq.impl.AbstractQuery"
    },
    {
      "type": "org.jooq.impl.AbstractResultQuery"
    },
    {
      "type": "org.jooq.impl.AbstractScope",
      "allDeclaredFields": true
    },
    {
      "type": "org.jooq.impl.CallbackExecuteListener"
    },
    {
      "type": "org.jooq.impl.DataSourceConnectionProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.jooq.impl.DefaultConfiguration"
    },
    {
      "type": "org.jooq.impl.DefaultDSLContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.jooq.impl.DefaultExecuteContext"
    },
    {
      "type": "org.jooq.impl.DefaultExecuteListenerProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.jooq.impl.ResultQueryTrait"
    },
    {
      "type": "org.jooq.impl.SQLDataType"
    },
    {
      "type": "org.jooq.impl.SQLDataTypes$DuckDBDataType"
    },
    {
      "type": "org.jooq.impl.SQLDataTypes$TrinoDataType"
    },
    {
      "type": "org.jooq.impl.SelectImpl"
    },
    {
      "type": "org.jooq.impl.Tools"
    },
    {
      "type": "org.jooq.tools.jdbc.DefaultPreparedStatement"
    },
    {
      "type": "org.jooq.tools.jdbc.MockCallable"
    },
    {
      "type": "org.jooq.tools.jdbc.MockDataProvider"
    },
    {
      "type": "org.jooq.tools.jdbc.MockRunnable"
    },
    {
      "type": "org.jooq.util.cubrid.CUBRIDDataType"
    },
    {
      "type": "org.jooq.util.derby.DerbyDataType"
    },
    {
      "type": "org.jooq.util.firebird.FirebirdDataType"
    },
    {
      "type": "org.jooq.util.h2.H2DataType"
    },
    {
      "type": "org.jooq.util.hsqldb.HSQLDBDataType"
    },
    {
      "type": "org.jooq.util.ignite.IgniteDataType"
    },
    {
      "type": "org.jooq.util.mariadb.MariaDBDataType"
    },
    {
      "type": "org.jooq.util.mysql.MySQLDataType"
    },
    {
      "type": "org.jooq.util.postgres.PostgresDataType"
    },
    {
      "type": "org.jooq.util.sqlite.SQLiteDataType"
    },
    {
      "type": "org.jooq.util.xml.jaxb.InformationSchema"
    },
    {
      "type": "org.jooq.util.yugabytedb.YugabyteDBDataType"
    },
    {
      "type": "org.neo4j.driver.Driver"
    },
    {
      "type": "org.openqa.selenium.WebDriver"
    },
    {
      "type": "org.opentest4j.TestAbortedException"
    },
    {
      "type": "org.postgresql.Driver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.postgresql.core.PGStream"
    },
    {
      "type": "org.postgresql.core.QueryExecutorCloseAction",
      "fields": [
        {
          "name": "pgStream"
        }
      ]
    },
    {
      "type": "org.postgresql.core.VisibleBufferedInputStream"
    },
    {
      "type": "org.postgresql.core.v3.QueryExecutorImpl"
    },
    {
      "type": "org.postgresql.jdbc.PgPreparedStatement"
    },
    {
      "type": "org.postgresql.jdbc.PgStatement",
      "fields": [
        {
          "name": "cancelTimerTask"
        },
        {
          "name": "isClosed"
        },
        {
          "name": "statementState"
        }
      ]
    },
    {
      "type": "org.quartz.Scheduler"
    },
    {
      "type": "org.reactivestreams.Publisher"
    },
    {
      "type": "org.reactivestreams.Subscriber"
    },
    {
      "type": "org.slf4j.Logger"
    },
    {
      "type": "org.slf4j.LoggerFactory"
    },
    {
      "type": "org.slf4j.bridge.SLF4JBridgeHandler"
    },
    {
      "type": "org.slf4j.spi.LocationAwareLogger"
    },
    {
      "type": "org.springdoc.api.AbstractOpenApiResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.api.AbstractOpenApiResource$ConditionType"
    },
    {
      "type": "org.springdoc.api.OpenApiResourceNotFoundException"
    },
    {
      "type": "org.springdoc.core.annotations.RouterOperation"
    },
    {
      "type": "org.springdoc.core.conditions.CacheOrGroupedOpenApiCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.MultipleOpenApiGroupsCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.MultipleOpenApiSupportCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.SpecPropertiesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "additionalModelsConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "fileSupportConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "genericReturnTypeParser",
          "parameterTypes": []
        },
        {
          "name": "localSpringDocParameterNameDiscoverer",
          "parameterTypes": []
        },
        {
          "name": "modelConverterRegistrar",
          "parameterTypes": [
            "java.util.Optional",
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        },
        {
          "name": "openAPIBuilder",
          "parameterTypes": [
            "java.util.Optional",
            "org.springdoc.core.service.SecurityService",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.utils.PropertyResolverUtils",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional"
          ]
        },
        {
          "name": "operationBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.GenericParameterService",
            "org.springdoc.core.service.RequestBodyService",
            "org.springdoc.core.service.SecurityService",
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "parameterBuilder",
          "parameterTypes": [
            "org.springdoc.core.utils.PropertyResolverUtils",
            "java.util.Optional",
            "java.util.Optional",
            "org.springdoc.core.providers.ObjectMapperProvider",
            "java.util.Optional"
          ]
        },
        {
          "name": "polymorphicModelConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "propertyResolverUtils",
          "parameterTypes": [
            "org.springframework.beans.factory.config.ConfigurableBeanFactory",
            "org.springframework.context.MessageSource",
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        },
        {
          "name": "requestBodyBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.GenericParameterService",
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "responseSupportConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "schemaPropertyDeprecatingConverter",
          "parameterTypes": []
        },
        {
          "name": "securityParser",
          "parameterTypes": [
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "springDocCustomizers",
          "parameterTypes": [
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional"
          ]
        },
        {
          "name": "springDocProviders",
          "parameterTypes": [
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "springdocObjectMapperProvider",
          "parameterTypes": [
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$1",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springdoc.core.configuration.SpringDocConfiguration"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "springDataWebPropertiesProvider",
          "parameterTypes": [
            "java.util.Optional"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webConversionServiceProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocUIConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.Optional"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.converters.AdditionalModelsConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.FileSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.ModelConverterRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PolymorphicModelConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PropertyCustomizingConverter"
    },
    {
      "type": "org.springdoc.core.converters.ResponseSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.SchemaPropertyDeprecatingConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.GlobalOpenApiCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiBuilderCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiLocaleCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.PropertyCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.SpringDocCustomizers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.filters.OpenApiMethodFilter"
    },
    {
      "type": "org.springdoc.core.fn.AbstractRouterFunctionVisitor"
    },
    {
      "type": "org.springdoc.core.fn.RouterFunctionData"
    },
    {
      "type": "org.springdoc.core.fn.RouterOperation"
    },
    {
      "type": "org.springdoc.core.models.ControllerAdviceInfo"
    },
    {
      "type": "org.springdoc.core.models.GroupedOpenApi"
    },
    {
      "type": "org.springdoc.core.models.MethodAttributes"
    },
    {
      "type": "org.springdoc.core.models.ParameterId"
    },
    {
      "type": "org.springdoc.core.models.ParameterInfo"
    },
    {
      "type": "org.springdoc.core.models.RequestBodyInfo"
    },
    {
      "type": "org.springdoc.core.parsers.ReturnTypeParser"
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setDefaultModelExpandDepth",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setDefaultModelsExpandDepth",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setTryItOutEnabled",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction"
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$SwaggerUrl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs$OpenApiVersion"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$Cache",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$GroupConfig",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$Groups",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$DeprecatingConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PageableConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PolymorphicConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$SortConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$Webjars",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigParameters",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties$Csrf",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties$SyntaxHighlight",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiOAuthProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.providers.ActuatorProvider"
    },
    {
      "type": "org.springdoc.core.providers.CloudFunctionProvider"
    },
    {
      "type": "org.springdoc.core.providers.JavadocProvider"
    },
    {
      "type": "org.springdoc.core.providers.ObjectMapperProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.RepositoryRestResourceProvider"
    },
    {
      "type": "org.springdoc.core.providers.RouterFunctionProvider"
    },
    {
      "type": "org.springdoc.core.providers.SpringDataWebPropertiesProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.SpringDocProviders",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.SpringWebProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.WebConversionServiceProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.AbstractRequestService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.GenericParameterService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.GenericResponseService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.OpenAPIService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.OperationService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.RequestBodyService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.SecurityService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.utils.Constants",
      "allPublicFields": true
    },
    {
      "type": "org.springdoc.core.utils.PropertyResolverUtils",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerIndexTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerWelcome",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.api.OpenApiActuatorResource"
    },
    {
      "type": "org.springdoc.webmvc.api.OpenApiResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.api.OpenApiWebMvcResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "openApiResource",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectFactory",
            "org.springdoc.core.service.AbstractRequestService",
            "org.springdoc.core.service.GenericResponseService",
            "org.springdoc.core.service.OperationService",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.providers.SpringDocProviders",
            "org.springdoc.core.customizers.SpringDocCustomizers"
          ]
        },
        {
          "name": "requestBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.GenericParameterService",
            "org.springdoc.core.service.RequestBodyService",
            "org.springdoc.core.service.OperationService",
            "java.util.Optional",
            "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer"
          ]
        },
        {
          "name": "responseBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.OperationService",
            "java.util.List",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "springWebProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcActuatorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "routerFunctionProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.providers.SpringWebMvcProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.service.RequestService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "swaggerConfigResource",
          "parameterTypes": [
            "org.springdoc.webmvc.ui.SwaggerWelcomeCommon"
          ]
        },
        {
          "name": "swaggerResourceResolver",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties"
          ]
        },
        {
          "name": "swaggerWebMvcConfigurer",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigParameters",
            "org.springdoc.webmvc.ui.SwaggerIndexTransformer",
            "java.util.Optional",
            "org.springdoc.webmvc.ui.SwaggerResourceResolver"
          ]
        },
        {
          "name": "swaggerWelcome",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.properties.SwaggerUiConfigParameters",
            "org.springdoc.core.providers.SpringWebProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerConfigResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerIndexPageTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerIndexTransformer"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerUiHome"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWelcomeCommon",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.amqp.rabbit.core.RabbitTemplate"
    },
    {
      "type": "org.springframework.aop.PointcutAdvisor"
    },
    {
      "type": "org.springframework.aop.SpringProxy"
    },
    {
      "type": "org.springframework.aop.TargetClassAware"
    },
    {
      "type": "org.springframework.aop.aspectj.AbstractAspectJAdvice"
    },
    {
      "type": "org.springframework.aop.aspectj.AspectJAroundAdvice"
    },
    {
      "type": "org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint"
    },
    {
      "type": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.Advised"
    },
    {
      "type": "org.springframework.aop.framework.AopInfrastructureBean"
    },
    {
      "type": "org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation"
    },
    {
      "type": "org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor"
    },
    {
      "type": "org.springframework.aop.framework.ProxyConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setProxyTargetClass",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.ProxyProcessorSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setOrder",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.ReflectiveMethodInvocation"
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.interceptor.ExposeInvocationInterceptor"
    },
    {
      "type": "org.springframework.aop.scope.ScopedObject"
    },
    {
      "type": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.support.AbstractPointcutAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.support.AopUtils"
    },
    {
      "type": "org.springframework.aot.hint.annotation.Reflective"
    },
    {
      "type": "org.springframework.aot.hint.annotation.RegisterReflectionForBinding"
    },
    {
      "type": "org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor"
    },
    {
      "type": "org.springframework.batch.core.launch.JobLauncher"
    },
    {
      "type": "org.springframework.beans.BeanWrapper"
    },
    {
      "type": "org.springframework.beans.BeansException"
    },
    {
      "type": "org.springframework.beans.factory.Aware"
    },
    {
      "type": "org.springframework.beans.factory.BeanClassLoaderAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactoryAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanNameAware"
    },
    {
      "type": "org.springframework.beans.factory.DisposableBean"
    },
    {
      "type": "org.springframework.beans.factory.FactoryBean"
    },
    {
      "type": "org.springframework.beans.factory.InitializingBean"
    },
    {
      "type": "org.springframework.beans.factory.ListableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    },
    {
      "type": "org.springframework.beans.factory.ObjectFactory"
    },
    {
      "type": "org.springframework.beans.factory.ObjectProvider"
    },
    {
      "type": "org.springframework.beans.factory.SmartInitializingSingleton"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Autowired"
    },
    {
      "type": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.annotation.Qualifier"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Value"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanDefinition"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.ConfigurableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.NullBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ClearCachesApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.LazyInitializationExcludeFilter"
    },
    {
      "type": "org.springframework.boot.SpringApplication"
    },
    {
      "type": "org.springframework.boot.SpringBootConfiguration"
    },
    {
      "type": "org.springframework.boot.WebApplicationType"
    },
    {
      "type": "org.springframework.boot.actuate.audit.AuditEventRepository"
    },
    {
      "type": "org.springframework.boot.actuate.audit.AuditEventsEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "endpointCachingOperationInvokerAdvisor",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        },
        {
          "name": "endpointOperationParameterMapper",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "endpointObjectMapper",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "servletExposeExcludePropertyEndpointFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "servletEndpointRegistrar",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
            "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
            "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
        },
        {
          "name": "controllerEndpointDiscoverer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "controllerExposeExcludePropertyEndpointFilter",
          "parameterTypes": []
        },
        {
          "name": "endpointMediaTypes",
          "parameterTypes": []
        },
        {
          "name": "pathMappedEndpoints",
          "parameterTypes": [
            "java.util.Collection"
          ]
        },
        {
          "name": "webEndpointDiscoverer",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
            "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "webEndpointPathMapper",
          "parameterTypes": []
        },
        {
          "name": "webExposeExcludePropertyEndpointFilter",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "servletEndpointDiscoverer",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "controllerEndpointHandlerMapping",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
        },
        {
          "name": "endpointObjectMapperWebMvcConfigurer",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"
          ]
        },
        {
          "name": "webEndpointServletHandlerMapping",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
            "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
            "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
            "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "pingHealthContributor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorFallback"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "dbHealthContributor",
          "parameterTypes": [
            "java.util.Map",
            "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "classLoaderMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmCompilationMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmGcMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmHeapPressureMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmInfoMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmMemoryMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmThreadMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "logbackMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryCustomizer"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAspectsAutoConfiguration$ObservationAnnotationsEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "meterRegistryCloser",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "meterRegistryPostProcessor",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "micrometerClock",
          "parameterTypes": []
        },
        {
          "name": "propertiesMeterFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data$Repository",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System$Diskspace",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "diskSpaceMetrics",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        },
        {
          "name": "fileDescriptorMetrics",
          "parameterTypes": []
        },
        {
          "name": "processorMetrics",
          "parameterTypes": []
        },
        {
          "name": "uptimeMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration$CaffeineCacheMeterBinderProviderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "caffeineCacheMeterBinderProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry",
            "java.util.Collection",
            "java.util.Map"
          ]
        },
        {
          "name": "cacheMetricsRegistrar",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "simpleConfig",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
          ]
        },
        {
          "name": "simpleMeterRegistry",
          "parameterTypes": [
            "io.micrometer.core.instrument.simple.SimpleConfig",
            "io.micrometer.core.instrument.Clock"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dataSourcePoolMetadataMeterBinder",
          "parameterTypes": [
            "java.util.Map",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "hikariDataSourceMeterBinder",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "startupTimeMetrics",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "bindTaskExecutorsToRegistry",
          "parameterTypes": [
            "java.util.Map",
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        },
        {
          "name": "eagerTaskExecutorMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "tomcatMetricsBinder",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observationRegistry",
          "parameterTypes": []
        },
        {
          "name": "observationRegistryPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "propertiesObservationFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultMeterObservationHandler",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry",
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$ObservedAspectConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observedAspect",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "metricsObservationHandlerGrouping",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client$ClientRequests",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server$ServerRequests",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$LongTaskTimer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryConfigurer"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "metricsHttpClientUriTagFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observationRestClientCustomizer",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observationRestTemplateCustomizer",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webMvcObservationFilter",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "metricsHttpServerUriTagFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observabilitySchedulingConfigurer",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "diskSpaceHealthIndicator",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getThreshold",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "managementServletContext",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
        },
        {
          "name": "servletWebChildContextFactory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.availability.LivenessStateHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.availability.ReadinessStateHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.beans.BeansEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.cache.CachesEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.context.ShutdownEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointFilter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointId"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.ExposableEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.Operation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.OperationType"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationMethod"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.Endpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointConverter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationParameter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationParameters"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.ParameterMappingException"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.ExposableServletEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.ExposableWebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebOperation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebOperationRequestPredicate"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ExposableControllerEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$ServletWebOperation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler"
    },
    {
      "type": "org.springframework.boot.actuate.env.EnvironmentEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.health.AbstractHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.Health"
    },
    {
      "type": "org.springframework.boot.actuate.health.Health$Builder"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthContributor"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointGroups"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.health.PingHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.StatusAggregator"
    },
    {
      "type": "org.springframework.boot.actuate.info.EnvironmentInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.GitInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.InfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.InfoEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode"
    },
    {
      "type": "org.springframework.boot.actuate.info.JavaInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.OsInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.ProcessInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.logging.LogFileWebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.logging.LoggersEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.management.ThreadDumpEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.MetricsEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.cache.CacheMetricsRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.cache.CaffeineCacheMeterBinderProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.web.client.ObservationRestClientCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.web.client.ObservationRestTemplateCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.sbom.SbomEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"
    },
    {
      "type": "org.springframework.boot.actuate.web.exchanges.HttpExchangesEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint"
    },
    {
      "type": "org.springframework.boot.ansi.AnsiOutput$Enabled"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackage"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureAfter"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureBefore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureOrder"
    },
    {
      "type": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.EnableAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ImportAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SpringBootApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationAvailability",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnCheckpointRestore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnExpression"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnExpressionCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnThreadingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultLifecycleProcessor",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.context.LifecycleProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "propertySourcesPlaceholderConfigurer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "persistenceExceptionTranslationPostProcessor",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "messageConverters",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "stringHttpMessageConverter",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "mappingJackson2HttpMessageConverter",
          "parameterTypes": [
            "com.fasterxml.jackson.databind.ObjectMapper"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonComponentModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "standardJacksonObjectMapperBuilderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonMixinModule",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.jackson.JsonMixinModuleEntries"
          ]
        },
        {
          "name": "jsonMixinModuleEntries",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapperBuilder",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapper",
          "parameterTypes": [
            "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "parameterNamesModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jdbcConnectionDetails",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceCheckpointRestoreConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dataSource",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
            "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails"
          ]
        },
        {
          "name": "jdbcConnectionDetailsHikariBeanPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$OracleUcp"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setDriverClassName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPassword",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "transactionManager",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "javax.sql.DataSource",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.HikariJdbcConnectionDetailsBeanPostProcessor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jdbcClient",
          "parameterTypes": [
            "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jdbcTemplate",
          "parameterTypes": [
            "javax.sql.DataSource",
            "org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "namedParameterJdbcTemplate",
          "parameterTypes": [
            "org.springframework.jdbc.core.JdbcTemplate"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "hikariPoolDataSourceMetadataProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jooq.DefaultExceptionTranslatorExecuteListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jooq.ExceptionTranslatorExecuteListener"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jooqExceptionTranslator",
          "parameterTypes": []
        },
        {
          "name": "jooqExceptionTranslatorExecuteListenerProvider",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jooq.ExceptionTranslatorExecuteListener"
          ]
        },
        {
          "name": "transactionProvider",
          "parameterTypes": [
            "org.springframework.transaction.PlatformTransactionManager"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jooq.SpringTransactionProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dataSourceScriptDatabaseInitializer",
          "parameterTypes": [
            "javax.sql.DataSource",
            "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.ssl.SslProperties"
          ]
        },
        {
          "name": "fileWatcher",
          "parameterTypes": []
        },
        {
          "name": "sslBundleRegistry",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "sslPropertiesSslBundleRegistrar",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.ssl.FileWatcher"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch$File",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar$Bundle"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool$Shutdown",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskExecutorBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "taskExecutorBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationTaskExecutor",
          "parameterTypes": [
            "org.springframework.boot.task.TaskExecutorBuilder",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskExecutorBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskSchedulerBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "taskSchedulerBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskSchedulerBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.thread.Threading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "transactionTemplate",
          "parameterTypes": [
            "org.springframework.transaction.PlatformTransactionManager"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "platformTransactionManagerCustomizers",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "transactionExecutionListeners",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setIncludeStacktrace",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttributeEditor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getCompression",
          "parameterTypes": []
        },
        {
          "name": "getError",
          "parameterTypes": []
        },
        {
          "name": "getJetty",
          "parameterTypes": []
        },
        {
          "name": "getMaxHttpRequestHeaderSize",
          "parameterTypes": []
        },
        {
          "name": "getNetty",
          "parameterTypes": []
        },
        {
          "name": "getTomcat",
          "parameterTypes": []
        },
        {
          "name": "getUndertow",
          "parameterTypes": []
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getMaxHttpFormPostSize",
          "parameterTypes": []
        },
        {
          "name": "getMaxHttpResponseHeaderSize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getH2cMaxContentLength",
          "parameterTypes": []
        },
        {
          "name": "getInitialBufferSize",
          "parameterTypes": []
        },
        {
          "name": "getMaxInitialLineLength",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getMaxHttpFormPostSize",
          "parameterTypes": []
        },
        {
          "name": "getMaxHttpResponseHeaderSize",
          "parameterTypes": []
        },
        {
          "name": "getMaxSwallowSize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getBufferSize",
          "parameterTypes": []
        },
        {
          "name": "getMaxHttpPostSize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "httpMessageConvertersRestClientCustomizer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "restClientBuilderConfigurer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "restClientSsl",
          "parameterTypes": [
            "org.springframework.boot.ssl.SslBundles"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientSsl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "restTemplateBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
          ]
        },
        {
          "name": "restTemplateBuilderConfigurer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "tomcatWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.TomcatVirtualThreadsWebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.format.DateTimeFormatters"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dispatcherServlet",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dispatcherServletRegistration",
          "parameterTypes": [
            "org.springframework.web.servlet.DispatcherServlet",
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "characterEncodingFilter",
          "parameterTypes": []
        },
        {
          "name": "localeCharsetMappingsCustomizer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
          ]
        },
        {
          "name": "multipartConfigElement",
          "parameterTypes": []
        },
        {
          "name": "multipartResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getFileSizeThreshold",
          "parameterTypes": []
        },
        {
          "name": "getMaxFileSize",
          "parameterTypes": []
        },
        {
          "name": "getMaxRequestSize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "servletWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "tomcatServletWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "tomcatServletWebServerFactory",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "formContentFilter",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ListableBeanFactory"
          ]
        },
        {
          "name": "flashMapManager",
          "parameterTypes": []
        },
        {
          "name": "localeResolver",
          "parameterTypes": []
        },
        {
          "name": "mvcContentNegotiationManager",
          "parameterTypes": []
        },
        {
          "name": "mvcConversionService",
          "parameterTypes": []
        },
        {
          "name": "mvcValidator",
          "parameterTypes": []
        },
        {
          "name": "themeResolver",
          "parameterTypes": []
        },
        {
          "name": "welcomePageHandlerMapping",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "welcomePageNotAcceptableHandlerMapping",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.beans.factory.ListableBeanFactory",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "defaultViewResolver",
          "parameterTypes": []
        },
        {
          "name": "requestContextFilter",
          "parameterTypes": []
        },
        {
          "name": "viewResolver",
          "parameterTypes": [
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WelcomePageHandlerMappingFactory"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$MatchingStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePage"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "errorAttributes",
          "parameterTypes": []
        },
        {
          "name": "errorPageCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
          ]
        },
        {
          "name": "preserveErrorControllerTargetClassPostProcessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.autoconfigure.web.WebProperties"
          ]
        },
        {
          "name": "conventionErrorViewResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "beanNameViewResolver",
          "parameterTypes": []
        },
        {
          "name": "defaultErrorView",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver"
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "websocketServletWebServerCustomizer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailability"
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailabilityBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.availability.AvailabilityChangeEvent"
    },
    {
      "type": "org.springframework.boot.availability.AvailabilityState"
    },
    {
      "type": "org.springframework.boot.availability.LivenessState"
    },
    {
      "type": "org.springframework.boot.availability.ReadinessState"
    },
    {
      "type": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudPlatform"
    },
    {
      "type": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.FileEncodingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.TypeExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.ConfigurableBootstrapContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataLocation",
      "fields": [
        {
          "name": "this$0"
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataNotFoundAction"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataProperties",
      "fields": [
        {
          "name": "this$0"
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.DelegatingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.context.properties.bind.Binder",
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.event.ApplicationReadyEvent"
    },
    {
      "type": "org.springframework.boot.context.event.ApplicationStartedEvent"
    },
    {
      "type": "org.springframework.boot.context.event.EventPublishingRunListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.SpringApplication",
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.BoundConfigurationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.NestedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.BindResult"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Binder"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Name"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Nested"
    },
    {
      "type": "org.springframework.boot.context.properties.source.ConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    },
    {
      "type": "org.springframework.boot.convert.DurationUnit"
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DevToolsDataSourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.DevToolsR2dbcAutoConfiguration$DevToolsConnectionFactoryCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.OnEnabledDevToolsCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.env.DevToolsHomePropertiesPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.logger.DevToolsLogFactory$Listener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.logger.DevToolsLogFactory.Listener"
    },
    {
      "type": "org.springframework.boot.devtools.restart.ConditionalOnInitializedRestarter"
    },
    {
      "type": "org.springframework.boot.devtools.restart.OnInitializedRestarterCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.restart.RestartApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.restart.RestartScopeInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.PropertiesPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.YamlPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.info.BuildProperties"
    },
    {
      "type": "org.springframework.boot.info.GitProperties"
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponent$Scope"
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponentModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries$Builder"
    },
    {
      "type": "org.springframework.boot.jdbc.DataSourceBuilder"
    },
    {
      "type": "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
    },
    {
      "type": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata"
    },
    {
      "type": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
    },
    {
      "type": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.LogLevelEditor"
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.logback.ApplicationNameConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.ColorConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.logback.RootLogLevelConfigurator"
    },
    {
      "type": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$ScriptLocationResolver"
    },
    {
      "type": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
    },
    {
      "type": "org.springframework.boot.sql.init.DatabaseInitializationMode"
    },
    {
      "type": "org.springframework.boot.sql.init.DatabaseInitializationSettings"
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry$RegisteredSslBundle"
    },
    {
      "type": "org.springframework.boot.ssl.NoSuchSslBundleException"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundle"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundleRegistry"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundles"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerCustomizer"
    },
    {
      "type": "org.springframework.boot.task.TaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.TaskExecutorCustomizer"
    },
    {
      "type": "org.springframework.boot.task.TaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.TaskSchedulerCustomizer"
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerCustomizer"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.ConditionReportApplicationContextFailureProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.properties.PropertyMapping"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.context.ImportsContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.context.SpringBootContextLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.context.SpringBootTest"
    },
    {
      "type": "org.springframework.boot.test.context.SpringBootTest$WebEnvironment"
    },
    {
      "type": "org.springframework.boot.test.context.SpringBootTestContextBootstrapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.context.filter.ExcludeFilterApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.graphql.tester.HttpGraphQlTesterContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.mock.mockito.MockitoContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.mock.mockito.MockitoPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.Set"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.test.mock.mockito.MockitoPostProcessor"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.mock.mockito.SpringBootMockResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.web.SpringBootTestRandomPortEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.web.client.TestRestTemplate"
    },
    {
      "type": "org.springframework.boot.test.web.client.TestRestTemplate$HttpClientOption"
    },
    {
      "type": "org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer$TestRestTemplateFactory",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer$TestRestTemplateRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.web.client.TestRestTemplateContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.web.server.LocalServerPort"
    },
    {
      "type": "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
      "methods": [
        {
          "name": "byAnnotation",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
    },
    {
      "type": "org.springframework.boot.web.client.RestClientCustomizer"
    },
    {
      "type": "org.springframework.boot.web.client.RestTemplateBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.client.RestTemplateCustomizer"
    },
    {
      "type": "org.springframework.boot.web.client.RestTemplateRequestCustomizer"
    },
    {
      "type": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
    },
    {
      "type": "org.springframework.boot.web.error.ErrorAttributeOptions"
    },
    {
      "type": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.Compression",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getMinResponseSize",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.ConfigurableWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.Cookie",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.Cookie$SameSite"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPage"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistrar"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistry"
    },
    {
      "type": "org.springframework.boot.web.server.Http2",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.MimeMappings"
    },
    {
      "type": "org.springframework.boot.web.server.MimeMappings$Mapping"
    },
    {
      "type": "org.springframework.boot.web.server.Shutdown"
    },
    {
      "type": "org.springframework.boot.web.server.Ssl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.Ssl$ClientAuth"
    },
    {
      "type": "org.springframework.boot.web.server.Ssl$ServerNameSslBundle",
      "fields": [
        {
          "name": "this$0"
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.WebServer"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.FilterRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.RegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.ServletContextInitializer"
    },
    {
      "type": "org.springframework.boot.web.servlet.ServletRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.WebListenerRegistrar"
    },
    {
      "type": "org.springframework.boot.web.servlet.WebListenerRegistry"
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.error.ErrorAttributes"
    },
    {
      "type": "org.springframework.boot.web.servlet.error.ErrorController"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedFilter"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Encoding",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Jsp",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Session",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Session$Cookie",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Session$SessionTrackingMode"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.SessionStoreDirectory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.Cache"
    },
    {
      "type": "org.springframework.cache.CacheManager"
    },
    {
      "type": "org.springframework.cache.annotation.AbstractCachingConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setConfigurers",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cache.annotation.AbstractCachingConfiguration$CachingConfigurerSupplier"
    },
    {
      "type": "org.springframework.cache.annotation.AnnotationCacheOperationSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.annotation.AnnotationCacheOperationSource$CacheOperationProvider"
    },
    {
      "type": "org.springframework.cache.annotation.CacheAnnotationParser"
    },
    {
      "type": "org.springframework.cache.annotation.Cacheable"
    },
    {
      "type": "org.springframework.cache.annotation.CachingConfigurationSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cache.annotation.CachingConfigurer"
    },
    {
      "type": "org.springframework.cache.annotation.EnableCaching"
    },
    {
      "type": "org.springframework.cache.annotation.ProxyCachingConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "cacheAdvisor",
          "parameterTypes": [
            "org.springframework.cache.interceptor.CacheOperationSource",
            "org.springframework.cache.interceptor.CacheInterceptor"
          ]
        },
        {
          "name": "cacheInterceptor",
          "parameterTypes": [
            "org.springframework.cache.interceptor.CacheOperationSource"
          ]
        },
        {
          "name": "cacheOperationSource",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cache.caffeine.CaffeineCache"
    },
    {
      "type": "org.springframework.cache.caffeine.CaffeineCacheManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.AbstractCacheInvoker",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.CacheAspectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.CacheInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.CacheOperationSource"
    },
    {
      "type": "org.springframework.cache.jcache.JCacheCache"
    },
    {
      "type": "org.springframework.cache.jcache.config.ProxyJCacheConfiguration"
    },
    {
      "type": "org.springframework.cglib.core.ClassNameReader",
      "fields": [
        {
          "name": "EARLY_EXIT"
        }
      ]
    },
    {
      "type": "org.springframework.cglib.proxy.Dispatcher"
    },
    {
      "type": "org.springframework.cglib.proxy.MethodInterceptor"
    },
    {
      "type": "org.springframework.cglib.proxy.NoOp"
    },
    {
      "type": "org.springframework.cloud.function.web.function.FunctionEndpointInitializer"
    },
    {
      "type": "org.springframework.context.ApplicationContext"
    },
    {
      "type": "org.springframework.context.ApplicationContextAware"
    },
    {
      "type": "org.springframework.context.ApplicationContextException"
    },
    {
      "type": "org.springframework.context.ApplicationContextInitializer"
    },
    {
      "type": "org.springframework.context.ApplicationEvent"
    },
    {
      "type": "org.springframework.context.ApplicationListener"
    },
    {
      "type": "org.springframework.context.ApplicationStartupAware"
    },
    {
      "type": "org.springframework.context.ConfigurableApplicationContext"
    },
    {
      "type": "org.springframework.context.EmbeddedValueResolverAware"
    },
    {
      "type": "org.springframework.context.EnvironmentAware"
    },
    {
      "type": "org.springframework.context.Lifecycle"
    },
    {
      "type": "org.springframework.context.LifecycleProcessor"
    },
    {
      "type": "org.springframework.context.MessageSource"
    },
    {
      "type": "org.springframework.context.PayloadApplicationEvent"
    },
    {
      "type": "org.springframework.context.Phased"
    },
    {
      "type": "org.springframework.context.ResourceLoaderAware"
    },
    {
      "type": "org.springframework.context.SmartLifecycle"
    },
    {
      "type": "org.springframework.context.annotation.AnnotationConfigRegistry"
    },
    {
      "type": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.AspectJAutoProxyRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.AutoProxyRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Bean"
    },
    {
      "type": "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
    },
    {
      "type": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan"
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan$Filter"
    },
    {
      "type": "org.springframework.context.annotation.Conditional"
    },
    {
      "type": "org.springframework.context.annotation.Configuration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMetadataReaderFactory",
          "parameterTypes": [
            "org.springframework.core.type.classreading.MetadataReaderFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.EnableAspectJAutoProxy"
    },
    {
      "type": "org.springframework.context.annotation.Import"
    },
    {
      "type": "org.springframework.context.annotation.ImportAware"
    },
    {
      "type": "org.springframework.context.annotation.ImportRuntimeHints"
    },
    {
      "type": "org.springframework.context.annotation.Lazy"
    },
    {
      "type": "org.springframework.context.annotation.Primary"
    },
    {
      "type": "org.springframework.context.annotation.Role"
    },
    {
      "type": "org.springframework.context.annotation.Scope"
    },
    {
      "type": "org.springframework.context.event.ContextClosedEvent"
    },
    {
      "type": "org.springframework.context.event.ContextRefreshedEvent"
    },
    {
      "type": "org.springframework.context.event.DefaultEventListenerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.EventListenerMethodProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.SmartApplicationListener"
    },
    {
      "type": "org.springframework.context.i18n.LocaleContext"
    },
    {
      "type": "org.springframework.context.support.ApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup"
    },
    {
      "type": "org.springframework.context.support.MessageSourceAccessor"
    },
    {
      "type": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
    },
    {
      "type": "org.springframework.core.DefaultParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.MethodParameter"
    },
    {
      "type": "org.springframework.core.Ordered"
    },
    {
      "type": "org.springframework.core.ParameterNameDiscoverer"
    },
    {
      "type": "org.springframework.core.ParameterizedTypeReference"
    },
    {
      "type": "org.springframework.core.PrioritizedParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.PriorityOrdered"
    },
    {
      "type": "org.springframework.core.ReactiveAdapterRegistry"
    },
    {
      "type": "org.springframework.core.ResolvableType"
    },
    {
      "type": "org.springframework.core.StandardReflectionParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.annotation.AliasFor"
    },
    {
      "type": "org.springframework.core.annotation.MergedAnnotations$SearchStrategy"
    },
    {
      "type": "org.springframework.core.annotation.Order"
    },
    {
      "type": "org.springframework.core.convert.ConversionService"
    },
    {
      "type": "org.springframework.core.convert.TypeDescriptor"
    },
    {
      "type": "org.springframework.core.convert.converter.Converter"
    },
    {
      "type": "org.springframework.core.convert.converter.ConverterFactory"
    },
    {
      "type": "org.springframework.core.convert.converter.ConverterRegistry"
    },
    {
      "type": "org.springframework.core.convert.converter.GenericConverter"
    },
    {
      "type": "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
    },
    {
      "type": "org.springframework.core.convert.support.ConfigurableConversionService"
    },
    {
      "type": "org.springframework.core.convert.support.GenericConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.env.ConfigurableEnvironment"
    },
    {
      "type": "org.springframework.core.env.Environment"
    },
    {
      "type": "org.springframework.core.env.EnvironmentCapable"
    },
    {
      "type": "org.springframework.core.io.Resource"
    },
    {
      "type": "org.springframework.core.io.ResourceLoader"
    },
    {
      "type": "org.springframework.core.task.AsyncListenableTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.AsyncTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.SimpleAsyncTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.TaskDecorator"
    },
    {
      "type": "org.springframework.core.task.TaskExecutor"
    },
    {
      "type": "org.springframework.core.type.AnnotationMetadata"
    },
    {
      "type": "org.springframework.core.type.classreading.MetadataReaderFactory"
    },
    {
      "type": "org.springframework.dao.DataAccessException"
    },
    {
      "type": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.cassandra.ReactiveSession"
    },
    {
      "type": "org.springframework.data.domain.Pageable"
    },
    {
      "type": "org.springframework.data.domain.Sort"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
    },
    {
      "type": "org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
    },
    {
      "type": "org.springframework.data.jpa.repository.JpaRepository"
    },
    {
      "type": "org.springframework.data.ldap.repository.LdapRepository"
    },
    {
      "type": "org.springframework.data.mongodb.core.MongoTemplate"
    },
    {
      "type": "org.springframework.data.querydsl.binding.QuerydslBindingsFactory"
    },
    {
      "type": "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
    },
    {
      "type": "org.springframework.data.r2dbc.repository.R2dbcRepository"
    },
    {
      "type": "org.springframework.data.redis.cache.RedisCache"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.core.RedisOperations"
    },
    {
      "type": "org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
    },
    {
      "type": "org.springframework.data.repository.Repository"
    },
    {
      "type": "org.springframework.data.rest.core.config.RepositoryRestConfiguration"
    },
    {
      "type": "org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter"
    },
    {
      "type": "org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
    },
    {
      "type": "org.springframework.data.web.PageableHandlerMethodArgumentResolver"
    },
    {
      "type": "org.springframework.expression.Expression"
    },
    {
      "type": "org.springframework.expression.ExpressionParser"
    },
    {
      "type": "org.springframework.expression.ParseException"
    },
    {
      "type": "org.springframework.expression.ParserContext"
    },
    {
      "type": "org.springframework.expression.common.TemplateAwareExpressionParser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.expression.spel.standard.SpelExpression"
    },
    {
      "type": "org.springframework.expression.spel.standard.SpelExpressionParser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.format.AnnotationFormatterFactory"
    },
    {
      "type": "org.springframework.format.Formatter"
    },
    {
      "type": "org.springframework.format.FormatterRegistry"
    },
    {
      "type": "org.springframework.format.Parser"
    },
    {
      "type": "org.springframework.format.Printer"
    },
    {
      "type": "org.springframework.format.annotation.DateTimeFormat"
    },
    {
      "type": "org.springframework.format.support.DefaultFormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.format.support.FormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.graphql.test.tester.HttpGraphQlTester"
    },
    {
      "type": "org.springframework.hateoas.EntityModel"
    },
    {
      "type": "org.springframework.hateoas.server.LinkRelationProvider"
    },
    {
      "type": "org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.CacheControl"
    },
    {
      "type": "org.springframework.http.HttpEntity"
    },
    {
      "type": "org.springframework.http.HttpHeaders"
    },
    {
      "type": "org.springframework.http.HttpInputMessage"
    },
    {
      "type": "org.springframework.http.HttpMethod"
    },
    {
      "type": "org.springframework.http.HttpOutputMessage"
    },
    {
      "type": "org.springframework.http.HttpRequest"
    },
    {
      "type": "org.springframework.http.HttpStatus"
    },
    {
      "type": "org.springframework.http.HttpStatusCode"
    },
    {
      "type": "org.springframework.http.MediaType"
    },
    {
      "type": "org.springframework.http.ReactiveHttpInputMessage"
    },
    {
      "type": "org.springframework.http.RequestEntity"
    },
    {
      "type": "org.springframework.http.ResponseEntity"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequest"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestFactory"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestInterceptor"
    },
    {
      "type": "org.springframework.http.client.JdkClientHttpRequestFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.client.ReactorResourceFactory"
    },
    {
      "type": "org.springframework.http.client.observation.ClientRequestObservationConvention"
    },
    {
      "type": "org.springframework.http.codec.CodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
    },
    {
      "type": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.AbstractHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.FormHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.GenericHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.HttpMessageNotReadableException"
    },
    {
      "type": "org.springframework.http.converter.HttpMessageNotWritableException"
    },
    {
      "type": "org.springframework.http.converter.StringHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.GsonHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.server.PathContainer"
    },
    {
      "type": "org.springframework.http.server.PathContainer$Options"
    },
    {
      "type": "org.springframework.http.server.RequestPath"
    },
    {
      "type": "org.springframework.http.server.ServerHttpRequest"
    },
    {
      "type": "org.springframework.http.server.observation.ServerRequestObservationContext"
    },
    {
      "type": "org.springframework.http.server.observation.ServerRequestObservationConvention"
    },
    {
      "type": "org.springframework.http.server.reactive.HttpHandler"
    },
    {
      "type": "org.springframework.integration.config.EnableIntegration"
    },
    {
      "type": "org.springframework.integration.graph.IntegrationGraphServer"
    },
    {
      "type": "org.springframework.jdbc.SQLWarningException"
    },
    {
      "type": "org.springframework.jdbc.core.BatchPreparedStatementSetter"
    },
    {
      "type": "org.springframework.jdbc.core.CallableStatementCallback"
    },
    {
      "type": "org.springframework.jdbc.core.CallableStatementCreator"
    },
    {
      "type": "org.springframework.jdbc.core.ConnectionCallback"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcOperations"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
    },
    {
      "type": "org.springframework.jdbc.core.PreparedStatementCallback"
    },
    {
      "type": "org.springframework.jdbc.core.PreparedStatementCreator"
    },
    {
      "type": "org.springframework.jdbc.core.PreparedStatementCreatorFactory"
    },
    {
      "type": "org.springframework.jdbc.core.PreparedStatementSetter"
    },
    {
      "type": "org.springframework.jdbc.core.ResultSetExtractor"
    },
    {
      "type": "org.springframework.jdbc.core.ResultSetSupportingSqlParameter"
    },
    {
      "type": "org.springframework.jdbc.core.RowCallbackHandler"
    },
    {
      "type": "org.springframework.jdbc.core.RowMapper"
    },
    {
      "type": "org.springframework.jdbc.core.StatementCallback"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.ParsedSql"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.SqlParameterSource"
    },
    {
      "type": "org.springframework.jdbc.core.simple.DefaultJdbcClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.core.simple.JdbcClient"
    },
    {
      "type": "org.springframework.jdbc.core.simple.JdbcClient$StatementSpec"
    },
    {
      "type": "org.springframework.jdbc.datasource.DataSourceTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.datasource.DelegatingDataSource"
    },
    {
      "type": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
    },
    {
      "type": "org.springframework.jdbc.datasource.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.jdbc.datasource.init.ResourceDatabasePopulator"
    },
    {
      "type": "org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource"
    },
    {
      "type": "org.springframework.jdbc.support.JdbcAccessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.support.JdbcTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jdbc.support.KeyHolder"
    },
    {
      "type": "org.springframework.jdbc.support.SQLExceptionTranslator"
    },
    {
      "type": "org.springframework.jdbc.support.rowset.SqlRowSet"
    },
    {
      "type": "org.springframework.jms.core.JmsTemplate"
    },
    {
      "type": "org.springframework.jmx.export.MBeanExporter"
    },
    {
      "type": "org.springframework.kafka.core.KafkaTemplate"
    },
    {
      "type": "org.springframework.kafka.core.ProducerFactory"
    },
    {
      "type": "org.springframework.lang.Nullable"
    },
    {
      "type": "org.springframework.ldap.core.ContextSource"
    },
    {
      "type": "org.springframework.ldap.core.LdapOperations"
    },
    {
      "type": "org.springframework.mail.javamail.JavaMailSenderImpl"
    },
    {
      "type": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
    },
    {
      "type": "org.springframework.oxm.Marshaller"
    },
    {
      "type": "org.springframework.r2dbc.connection.R2dbcTransactionManager"
    },
    {
      "type": "org.springframework.r2dbc.connection.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.restdocs.ManualRestDocumentation"
    },
    {
      "type": "org.springframework.scheduling.SchedulingTaskExecutor"
    },
    {
      "type": "org.springframework.scheduling.annotation.SchedulingConfigurer"
    },
    {
      "type": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.SimpleAsyncTaskScheduler"
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
    },
    {
      "type": "org.springframework.scheduling.config.ScheduledTaskRegistrar"
    },
    {
      "type": "org.springframework.security.authentication.AuthenticationManager"
    },
    {
      "type": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher"
    },
    {
      "type": "org.springframework.security.authentication.ReactiveAuthenticationManager"
    },
    {
      "type": "org.springframework.security.config.annotation.web.builders.HttpSecurity"
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
    },
    {
      "type": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
    },
    {
      "type": "org.springframework.security.config.http.SessionCreationPolicy"
    },
    {
      "type": "org.springframework.security.oauth2.server.authorization.OAuth2Authorization"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
    },
    {
      "type": "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
    },
    {
      "type": "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
    },
    {
      "type": "org.springframework.security.web.SecurityFilterChain"
    },
    {
      "type": "org.springframework.security.web.util.matcher.RequestMatcher"
    },
    {
      "type": "org.springframework.session.Session"
    },
    {
      "type": "org.springframework.stereotype.Component"
    },
    {
      "type": "org.springframework.stereotype.Controller"
    },
    {
      "type": "org.springframework.stereotype.Indexed"
    },
    {
      "type": "org.springframework.test.context.BootstrapWith"
    },
    {
      "type": "org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.event.ApplicationEventsTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.event.EventPublishingTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.jdbc.SqlGroup"
    },
    {
      "type": "org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.junit.jupiter.SpringExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.observation.MicrometerObservationRegistryTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.DefaultBootstrapContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class",
            "org.springframework.test.context.CacheAwareContextLoaderDelegate"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.DefaultTestContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.test.context.support.DefaultTestContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.DependencyInjectionTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.DirtiesContextTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.DynamicPropertiesContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.transaction.TransactionalTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.web.ServletTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.web.WebAppConfiguration"
    },
    {
      "type": "org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.web.reactive.server.WebTestClient"
    },
    {
      "type": "org.springframework.transaction.ConfigurableTransactionManager"
    },
    {
      "type": "org.springframework.transaction.PlatformTransactionManager"
    },
    {
      "type": "org.springframework.transaction.ReactiveTransactionManager"
    },
    {
      "type": "org.springframework.transaction.TransactionDefinition"
    },
    {
      "type": "org.springframework.transaction.TransactionException"
    },
    {
      "type": "org.springframework.transaction.TransactionExecutionListener"
    },
    {
      "type": "org.springframework.transaction.TransactionManager"
    },
    {
      "type": "org.springframework.transaction.TransactionStatus"
    },
    {
      "type": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "transactionalEventListenerFactory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.annotation.EnableTransactionManagement"
    },
    {
      "type": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "transactionAdvisor",
          "parameterTypes": [
            "org.springframework.transaction.interceptor.TransactionAttributeSource",
            "org.springframework.transaction.interceptor.TransactionInterceptor"
          ]
        },
        {
          "name": "transactionAttributeSource",
          "parameterTypes": []
        },
        {
          "name": "transactionInterceptor",
          "parameterTypes": [
            "org.springframework.transaction.interceptor.TransactionAttributeSource"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.RestrictedTransactionalEventListenerFactory"
    },
    {
      "type": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.TransactionRuntimeHints"
    },
    {
      "type": "org.springframework.transaction.aspectj.AbstractTransactionAspect"
    },
    {
      "type": "org.springframework.transaction.event.TransactionalEventListenerFactory"
    },
    {
      "type": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAspectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAttribute"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAttributeSource"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.reactive.TransactionalOperator"
    },
    {
      "type": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder"
    },
    {
      "type": "org.springframework.transaction.support.DefaultTransactionDefinition",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.support.DefaultTransactionStatus"
    },
    {
      "type": "org.springframework.transaction.support.ResourceTransactionManager"
    },
    {
      "type": "org.springframework.transaction.support.TransactionCallback"
    },
    {
      "type": "org.springframework.transaction.support.TransactionOperations"
    },
    {
      "type": "org.springframework.transaction.support.TransactionTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ui.context.ThemeSource"
    },
    {
      "type": "org.springframework.util.AntPathMatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.AntPathMatcher$AntPathStringMatcher"
    },
    {
      "type": "org.springframework.util.CustomizableThreadCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.MultiValueMap"
    },
    {
      "type": "org.springframework.util.PathMatcher"
    },
    {
      "type": "org.springframework.util.StringValueResolver"
    },
    {
      "type": "org.springframework.util.concurrent.ListenableFuture"
    },
    {
      "type": "org.springframework.util.unit.DataSize",
      "fields": [
        {
          "name": "this$0"
        }
      ]
    },
    {
      "type": "org.springframework.validation.BindingResult"
    },
    {
      "type": "org.springframework.validation.DefaultMessageCodesResolver$Format"
    },
    {
      "type": "org.springframework.validation.Errors"
    },
    {
      "type": "org.springframework.validation.MessageCodesResolver"
    },
    {
      "type": "org.springframework.validation.SmartValidator"
    },
    {
      "type": "org.springframework.validation.Validator"
    },
    {
      "type": "org.springframework.validation.method.MethodValidationResult"
    },
    {
      "type": "org.springframework.web.HttpMediaTypeNotAcceptableException"
    },
    {
      "type": "org.springframework.web.accept.ContentNegotiationManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.accept.ContentNegotiationStrategy"
    },
    {
      "type": "org.springframework.web.accept.MediaTypeFileExtensionResolver"
    },
    {
      "type": "org.springframework.web.bind.annotation.ControllerAdvice"
    },
    {
      "type": "org.springframework.web.bind.annotation.CrossOrigin"
    },
    {
      "type": "org.springframework.web.bind.annotation.ExceptionHandler"
    },
    {
      "type": "org.springframework.web.bind.annotation.GetMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.Mapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMethod"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestParam"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseBody"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseStatus"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestController"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestControllerAdvice"
    },
    {
      "type": "org.springframework.web.bind.support.ConfigurableWebBindingInitializer"
    },
    {
      "type": "org.springframework.web.bind.support.SessionAttributeStore"
    },
    {
      "type": "org.springframework.web.bind.support.WebBindingInitializer"
    },
    {
      "type": "org.springframework.web.bind.support.WebDataBinderFactory"
    },
    {
      "type": "org.springframework.web.client.RequestCallback"
    },
    {
      "type": "org.springframework.web.client.ResponseErrorHandler"
    },
    {
      "type": "org.springframework.web.client.ResponseExtractor"
    },
    {
      "type": "org.springframework.web.client.RestClient"
    },
    {
      "type": "org.springframework.web.client.RestClient$Builder"
    },
    {
      "type": "org.springframework.web.client.RestTemplate"
    },
    {
      "type": "org.springframework.web.context.ConfigurableWebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.ServletContextAware"
    },
    {
      "type": "org.springframework.web.context.WebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.request.NativeWebRequest"
    },
    {
      "type": "org.springframework.web.context.request.RequestAttributes"
    },
    {
      "type": "org.springframework.web.context.request.RequestContextListener"
    },
    {
      "type": "org.springframework.web.context.request.ServletRequestAttributes"
    },
    {
      "type": "org.springframework.web.context.request.WebRequest"
    },
    {
      "type": "org.springframework.web.context.request.async.WebAsyncManager"
    },
    {
      "type": "org.springframework.web.context.support.GenericWebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.support.WebApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.cors.CorsConfiguration"
    },
    {
      "type": "org.springframework.web.cors.CorsConfigurationSource"
    },
    {
      "type": "org.springframework.web.cors.CorsProcessor"
    },
    {
      "type": "org.springframework.web.filter.CharacterEncodingFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.FormContentFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.GenericFilterBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.OncePerRequestFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.RequestContextFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.ServerHttpObservationFilter"
    },
    {
      "type": "org.springframework.web.method.ControllerAdviceBean"
    },
    {
      "type": "org.springframework.web.method.HandlerMethod"
    },
    {
      "type": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver"
    },
    {
      "type": "org.springframework.web.method.annotation.InitBinderDataBinderFactory"
    },
    {
      "type": "org.springframework.web.method.annotation.ModelFactory"
    },
    {
      "type": "org.springframework.web.method.annotation.SessionAttributesHandler"
    },
    {
      "type": "org.springframework.web.method.support.CompositeUriComponentsContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.method.support.InvocableHandlerMethod"
    },
    {
      "type": "org.springframework.web.method.support.ModelAndViewContainer"
    },
    {
      "type": "org.springframework.web.method.support.UriComponentsContributor"
    },
    {
      "type": "org.springframework.web.multipart.MultipartException"
    },
    {
      "type": "org.springframework.web.multipart.MultipartHttpServletRequest"
    },
    {
      "type": "org.springframework.web.multipart.MultipartResolver"
    },
    {
      "type": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.DispatcherHandler"
    },
    {
      "type": "org.springframework.web.reactive.HandlerResult"
    },
    {
      "type": "org.springframework.web.reactive.config.EnableWebFlux"
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurer"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient"
    },
    {
      "type": "org.springframework.web.service.annotation.HttpExchange"
    },
    {
      "type": "org.springframework.web.servlet.DispatcherServlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.FlashMap"
    },
    {
      "type": "org.springframework.web.servlet.FlashMapManager"
    },
    {
      "type": "org.springframework.web.servlet.FrameworkServlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.HandlerAdapter"
    },
    {
      "type": "org.springframework.web.servlet.HandlerExceptionResolver"
    },
    {
      "type": "org.springframework.web.servlet.HandlerExecutionChain"
    },
    {
      "type": "org.springframework.web.servlet.HandlerInterceptor"
    },
    {
      "type": "org.springframework.web.servlet.HandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.HttpServletBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.LocaleResolver"
    },
    {
      "type": "org.springframework.web.servlet.ModelAndView"
    },
    {
      "type": "org.springframework.web.servlet.RequestToViewNameTranslator"
    },
    {
      "type": "org.springframework.web.servlet.SmartView"
    },
    {
      "type": "org.springframework.web.servlet.ThemeResolver"
    },
    {
      "type": "org.springframework.web.servlet.View"
    },
    {
      "type": "org.springframework.web.servlet.ViewResolver"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.CorsRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setConfigurers",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.EnableWebMvc"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "beanNameHandlerMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "defaultServletHandlerMapping",
          "parameterTypes": []
        },
        {
          "name": "handlerExceptionResolver",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager"
          ]
        },
        {
          "name": "handlerFunctionAdapter",
          "parameterTypes": []
        },
        {
          "name": "httpRequestHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "mvcPathMatcher",
          "parameterTypes": []
        },
        {
          "name": "mvcPatternParser",
          "parameterTypes": []
        },
        {
          "name": "mvcResourceUrlProvider",
          "parameterTypes": []
        },
        {
          "name": "mvcUriComponentsContributor",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
          ]
        },
        {
          "name": "mvcUrlPathHelper",
          "parameterTypes": []
        },
        {
          "name": "mvcViewResolver",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager"
          ]
        },
        {
          "name": "requestMappingHandlerAdapter",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.validation.Validator"
          ]
        },
        {
          "name": "requestMappingHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "resourceHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "routerFunctionMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "simpleControllerHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "viewControllerHandlerMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "viewNameTranslator",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.function.HandlerFunction"
    },
    {
      "type": "org.springframework.web.servlet.function.RouterFunction"
    },
    {
      "type": "org.springframework.web.servlet.function.ServerRequest"
    },
    {
      "type": "org.springframework.web.servlet.function.ServerResponse"
    },
    {
      "type": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler"
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry"
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.HandlerMappingIntrospector"
    },
    {
      "type": "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
    },
    {
      "type": "org.springframework.web.servlet.handler.MappedInterceptor"
    },
    {
      "type": "org.springframework.web.servlet.handler.MatchableHandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.handler.RequestMatchResult"
    },
    {
      "type": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.i18n.AbstractLocaleResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.condition.PathPatternsRequestCondition"
    },
    {
      "type": "org.springframework.web.servlet.mvc.condition.PatternsRequestCondition"
    },
    {
      "type": "org.springframework.web.servlet.mvc.condition.RequestCondition"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfo"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfo$BuilderConfiguration"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping$AnnotationDescriptor"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceResolver"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceResolverChain"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceTransformer"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceTransformerChain"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceUrlProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.AbstractFlashMapManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.RequestContext"
    },
    {
      "type": "org.springframework.web.servlet.support.SessionFlashMapManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.WebContentGenerator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.theme.AbstractThemeResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.theme.FixedThemeResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractCachingViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractUrlBasedView"
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractView"
    },
    {
      "type": "org.springframework.web.servlet.view.BeanNameViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.InternalResourceViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.RedirectView"
    },
    {
      "type": "org.springframework.web.servlet.view.UrlBasedViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.ViewResolverComposite",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
    },
    {
      "type": "org.springframework.web.util.UriComponentsBuilder"
    },
    {
      "type": "org.springframework.web.util.UriTemplateHandler"
    },
    {
      "type": "org.springframework.web.util.UrlPathHelper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.util.pattern.PathPattern"
    },
    {
      "type": "org.springframework.web.util.pattern.PathPatternParser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.util.pattern.PatternParseException"
    },
    {
      "type": "org.springframework.ws.test.client.MockWebServiceServer"
    },
    {
      "type": "org.springframework.ws.transport.http.MessageDispatcherServlet"
    },
    {
      "type": "org.testng.SkipException"
    },
    {
      "type": "org.thymeleaf.spring6.SpringTemplateEngine"
    },
    {
      "type": "org.webjars.WebJarAssetLocator"
    },
    {
      "type": "org.xnio.SslClientAuthMode"
    },
    {
      "type": "org.yaml.snakeyaml.Yaml"
    },
    {
      "type": "reactor.core.publisher.Flux"
    },
    {
      "type": "reactor.core.publisher.Hooks"
    },
    {
      "type": "reactor.core.publisher.Mono"
    },
    {
      "type": "reactor.netty.http.server.HttpServer"
    },
    {
      "type": "reactor.tools.agent.ReactorDebugAgent"
    },
    {
      "type": "sun.management.ClassLoadingImpl"
    },
    {
      "type": "sun.management.CompilationImpl"
    },
    {
      "type": "sun.management.ManagementFactoryHelper$1"
    },
    {
      "type": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl"
    },
    {
      "type": "sun.management.MemoryImpl"
    },
    {
      "type": "sun.management.MemoryManagerImpl"
    },
    {
      "type": "sun.management.MemoryPoolImpl"
    },
    {
      "type": "sun.management.RuntimeImpl"
    },
    {
      "type": "sun.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ],
      "methods": [
        {
          "name": "allocateInstance",
          "parameterTypes": [
            "java.lang.Class"
          ]
        },
        {
          "name": "objectFieldOffset",
          "parameterTypes": [
            "java.lang.reflect.Field"
          ]
        },
        {
          "name": "putBoolean",
          "parameterTypes": [
            "java.lang.Object",
            "long",
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "sun.nio.ch.NioSocketImpl"
    },
    {
      "type": "sun.nio.ch.NioSocketImpl$1"
    },
    {
      "type": "sun.reflect.ReflectionFactory",
      "methods": [
        {
          "name": "getReflectionFactory",
          "parameterTypes": []
        },
        {
          "name": "newConstructorForSerialization",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.reflect.Constructor"
          ]
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DRBG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$DualFormatJKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$JKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.certpath.PKIXCertPathValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLSocketImpl"
    },
    {
      "type": "sun.security.ssl.SSLSocketImpl$AppInputStream"
    },
    {
      "type": "sun.security.ssl.SSLSocketInputRecord"
    },
    {
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.IssuerAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "vc.ApiTests",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "botsApiTest",
          "parameterTypes": []
        },
        {
          "name": "chatsApiTest",
          "parameterTypes": []
        },
        {
          "name": "connectionsApiTest",
          "parameterTypes": []
        },
        {
          "name": "dataDumpApiTest",
          "parameterTypes": []
        },
        {
          "name": "deathsApiTest",
          "parameterTypes": []
        },
        {
          "name": "deathsTopMonthTest",
          "parameterTypes": []
        },
        {
          "name": "homepageTest",
          "parameterTypes": []
        },
        {
          "name": "isTestEnabled",
          "parameterTypes": []
        },
        {
          "name": "killsApiTest",
          "parameterTypes": []
        },
        {
          "name": "killsTopMonthTest",
          "parameterTypes": []
        },
        {
          "name": "playerLookupCraftheadTest",
          "parameterTypes": []
        },
        {
          "name": "playerLookupMinetoolsTest",
          "parameterTypes": []
        },
        {
          "name": "playerLookupMojangTest",
          "parameterTypes": []
        },
        {
          "name": "playtimeApiTest",
          "parameterTypes": []
        },
        {
          "name": "playtimeTopMonthApiTest",
          "parameterTypes": []
        },
        {
          "name": "priorityPlayersApiTest",
          "parameterTypes": []
        },
        {
          "name": "queueApiTest",
          "parameterTypes": []
        },
        {
          "name": "queueEtaEquationApiTest",
          "parameterTypes": []
        },
        {
          "name": "seenApiTest",
          "parameterTypes": []
        },
        {
          "name": "statsApiTest",
          "parameterTypes": []
        },
        {
          "name": "swaggerUiTest",
          "parameterTypes": []
        },
        {
          "name": "tablistApiTest",
          "parameterTypes": []
        },
        {
          "name": "wordCountApiTest",
          "parameterTypes": []
        },
        {
          "name": "wordSearchApiTest",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.Application",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "clientHttpRequestFactory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.Application$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "vc.Application$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "vc.Application$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "vc.RateLimiterTests"
    },
    {
      "type": "vc.api.CraftheadRestClient",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.http.client.ClientHttpRequestFactory"
          ]
        }
      ]
    },
    {
      "type": "vc.api.MinetoolsRestClient",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.http.client.ClientHttpRequestFactory"
          ]
        }
      ]
    },
    {
      "type": "vc.api.MojangRestClient",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.http.client.ClientHttpRequestFactory"
          ]
        }
      ]
    },
    {
      "type": "vc.api.model.CraftheadProfileProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "vc.api.model.CraftheadProfileResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "vc.api.model.MinetoolsUuidResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "vc.api.model.MojangProfileResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "vc.api.model.ProfileData"
    },
    {
      "type": "vc.config.CacheConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "cacheManager",
          "parameterTypes": [
            "com.github.benmanes.caffeine.cache.Caffeine"
          ]
        },
        {
          "name": "caffeineConfig",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.config.CacheConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "vc.config.CacheConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "vc.config.CacheConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "vc.config.InitialConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "connectionProvider",
          "parameterTypes": []
        },
        {
          "name": "dsl",
          "parameterTypes": []
        },
        {
          "name": "swaggerIndexTransformer",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties",
            "org.springdoc.core.properties.SwaggerUiOAuthProperties",
            "org.springdoc.core.properties.SwaggerUiConfigParameters",
            "org.springdoc.webmvc.ui.SwaggerWelcomeCommon",
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        }
      ]
    },
    {
      "type": "vc.config.InitialConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "javax.sql.DataSource"
          ]
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "vc.config.InitialConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "vc.config.InitialConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "vc.config.SwaggerCodeBlockTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "vc.config.WebConfig",
      "allDeclaredFields": true
    },
    {
      "type": "vc.config.WebConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "vc.controller.BotController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jooq.DSLContext"
          ]
        },
        {
          "name": "onlinePlayers",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.BotController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "vc.controller.ChatsController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jooq.DSLContext",
            "vc.util.PlayerLookup"
          ]
        },
        {
          "name": "chatSearch",
          "parameterTypes": [
            "java.lang.String",
            "java.time.LocalDate",
            "java.time.LocalDate",
            "java.lang.Integer",
            "java.lang.Integer"
          ]
        },
        {
          "name": "chats",
          "parameterTypes": [
            "java.util.UUID",
            "java.lang.String",
            "java.lang.Integer",
            "java.lang.Integer"
          ]
        },
        {
          "name": "chats",
          "parameterTypes": [
            "java.util.UUID",
            "java.lang.String",
            "java.time.LocalDate",
            "java.time.LocalDate",
            "java.lang.Integer",
            "java.lang.Integer"
          ]
        },
        {
          "name": "wordCount",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "vc.controller.ChatsController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "vc.controller.ChatsController$Chat",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.time.OffsetDateTime",
            "java.lang.String"
          ]
        },
        {
          "name": "chat",
          "parameterTypes": []
        },
        {
          "name": "time",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.ChatsController$ChatSearchResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "int",
            "int"
          ]
        },
        {
          "name": "chats",
          "parameterTypes": []
        },
        {
          "name": "pageCount",
          "parameterTypes": []
        },
        {
          "name": "total",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.ChatsController$ChatsResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "int",
            "int"
          ]
        },
        {
          "name": "chats",
          "parameterTypes": []
        },
        {
          "name": "pageCount",
          "parameterTypes": []
        },
        {
          "name": "total",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.ChatsController$PlayerChat",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.util.UUID",
            "java.time.OffsetDateTime",
            "java.lang.String"
          ]
        },
        {
          "name": "chat",
          "parameterTypes": []
        },
        {
          "name": "playerName",
          "parameterTypes": []
        },
        {
          "name": "time",
          "parameterTypes": []
        },
        {
          "name": "uuid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.ChatsController$WordCount",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "count",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.ConnectionsController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jooq.DSLContext",
            "vc.util.PlayerLookup"
          ]
        },
        {
          "name": "connections",
          "parameterTypes": [
            "java.util.UUID",
            "java.lang.String",
            "java.lang.Integer",
            "java.lang.Integer"
          ]
        },
        {
          "name": "connections",
          "parameterTypes": [
            "java.util.UUID",
            "java.lang.String",
            "java.time.LocalDate",
            "java.time.LocalDate",
            "java.lang.Integer",
            "java.lang.Integer"
          ]
        }
      ]
    },
    {
      "type": "vc.controller.ConnectionsController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "vc.controller.ConnectionsController$Connection",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.time.OffsetDateTime",
            "vc.data.dto.enums.Connectiontype"
          ]
        },
        {
          "name": "connection",
          "parameterTypes": []
        },
        {
          "name": "time",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.ConnectionsController$ConnectionsResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "int",
            "int"
          ]
        },
        {
          "name": "connections",
          "parameterTypes": []
        },
        {
          "name": "pageCount",
          "parameterTypes": []
        },
        {
          "name": "total",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.DataDumpController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jooq.DSLContext",
            "vc.util.PlayerLookup"
          ]
        },
        {
          "name": "getPlayerDataDump",
          "parameterTypes": [
            "java.util.UUID",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "vc.controller.DataDumpController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "vc.controller.DeathsController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jooq.DSLContext",
            "vc.util.PlayerLookup"
          ]
        },
        {
          "name": "deaths",
          "parameterTypes": [
            "java.util.UUID",
            "java.lang.String",
            "java.lang.Integer",
            "java.lang.Integer"
          ]
        },
        {
          "name": "deaths",
          "parameterTypes": [
            "java.util.UUID",
            "java.lang.String",
            "java.time.LocalDate",
            "java.time.LocalDate",
            "java.lang.Integer",
            "java.lang.Integer"
          ]
        },
        {
          "name": "deathsTopMonth",
          "parameterTypes": []
        },
        {
          "name": "kills",
          "parameterTypes": [
            "java.util.UUID",
            "java.lang.String",
            "java.lang.Integer",
            "java.lang.Integer"
          ]
        },
        {
          "name": "kills",
          "parameterTypes": [
            "java.util.UUID",
            "java.lang.String",
            "java.time.LocalDate",
            "java.time.LocalDate",
            "java.lang.Integer",
            "java.lang.Integer"
          ]
        },
        {
          "name": "killsTopMonth",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.DeathsController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "vc.controller.DeathsController$DeathOrKillTopMonthResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "count",
          "parameterTypes": []
        },
        {
          "name": "playerName",
          "parameterTypes": []
        },
        {
          "name": "uuid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.DeathsController$DeathsResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "int",
            "int"
          ]
        },
        {
          "name": "deaths",
          "parameterTypes": []
        },
        {
          "name": "pageCount",
          "parameterTypes": []
        },
        {
          "name": "total",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.DeathsController$KillsResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "int",
            "int"
          ]
        },
        {
          "name": "kills",
          "parameterTypes": []
        },
        {
          "name": "pageCount",
          "parameterTypes": []
        },
        {
          "name": "total",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.ErrorHandlerController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "handleError",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.HomepageController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "homepage",
          "parameterTypes": [
            "jakarta.servlet.http.HttpServletResponse"
          ]
        }
      ]
    },
    {
      "type": "vc.controller.NamesController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jooq.DSLContext",
            "vc.util.PlayerLookup"
          ]
        }
      ]
    },
    {
      "type": "vc.controller.NamesController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "vc.controller.PlaytimeController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jooq.DSLContext",
            "vc.util.PlayerLookup"
          ]
        },
        {
          "name": "playtime",
          "parameterTypes": [
            "java.util.UUID",
            "java.lang.String"
          ]
        },
        {
          "name": "playtimeTopMonth",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.PlaytimeController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "vc.controller.PlaytimeController$PlaytimeResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.UUID",
            "int"
          ]
        },
        {
          "name": "playtimeSeconds",
          "parameterTypes": []
        },
        {
          "name": "uuid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.PlaytimeController$PlaytimeTopMonthResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "playerName",
          "parameterTypes": []
        },
        {
          "name": "playtimeDays",
          "parameterTypes": []
        },
        {
          "name": "uuid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.PriorityPlayersController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jooq.DSLContext",
            "vc.util.PlayerLookup"
          ]
        },
        {
          "name": "priorityPlayers",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.PriorityPlayersController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "vc.controller.PriorityPlayersController$PriorityPlayersResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "playerName",
          "parameterTypes": []
        },
        {
          "name": "uuid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.QueueController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jooq.DSLContext"
          ]
        },
        {
          "name": "etaEquation",
          "parameterTypes": []
        },
        {
          "name": "queue",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.QueueController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "vc.controller.QueueController$QueueEtaEquation",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "factor",
          "parameterTypes": []
        },
        {
          "name": "pow",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.SeenController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jooq.DSLContext",
            "vc.util.PlayerLookup"
          ]
        },
        {
          "name": "seen",
          "parameterTypes": [
            "java.util.UUID",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "vc.controller.SeenController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "vc.controller.SeenController$SeenResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.time.OffsetDateTime",
            "java.time.OffsetDateTime"
          ]
        },
        {
          "name": "firstSeen",
          "parameterTypes": []
        },
        {
          "name": "lastSeen",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.StatsController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jooq.DSLContext",
            "vc.util.PlayerLookup"
          ]
        },
        {
          "name": "playerStats",
          "parameterTypes": [
            "java.util.UUID",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "vc.controller.StatsController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "vc.controller.StatsController$PlayerStats",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "java.time.OffsetDateTime",
            "java.time.OffsetDateTime",
            "int",
            "int",
            "int",
            "boolean"
          ]
        },
        {
          "name": "chatsCount",
          "parameterTypes": []
        },
        {
          "name": "deathCount",
          "parameterTypes": []
        },
        {
          "name": "firstSeen",
          "parameterTypes": []
        },
        {
          "name": "joinCount",
          "parameterTypes": []
        },
        {
          "name": "killCount",
          "parameterTypes": []
        },
        {
          "name": "lastSeen",
          "parameterTypes": []
        },
        {
          "name": "leaveCount",
          "parameterTypes": []
        },
        {
          "name": "playtimeSeconds",
          "parameterTypes": []
        },
        {
          "name": "playtimeSecondsMonth",
          "parameterTypes": []
        },
        {
          "name": "prio",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.TabListController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jooq.DSLContext"
          ]
        },
        {
          "name": "onlinePlayers",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.controller.TabListController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "vc.controller.TabListController$TablistEntry",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "playerName",
          "parameterTypes": []
        },
        {
          "name": "playerUuid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.enums.Connectiontype",
      "allDeclaredFields": true
    },
    {
      "type": "vc.data.dto.tables.pojos.Deaths",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.time.OffsetDateTime",
            "java.lang.String",
            "java.lang.String",
            "java.util.UUID",
            "java.lang.String",
            "java.util.UUID",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "getDeathMessage",
          "parameterTypes": []
        },
        {
          "name": "getKillerMob",
          "parameterTypes": []
        },
        {
          "name": "getKillerPlayerName",
          "parameterTypes": []
        },
        {
          "name": "getKillerPlayerUuid",
          "parameterTypes": []
        },
        {
          "name": "getTime",
          "parameterTypes": []
        },
        {
          "name": "getVictimPlayerName",
          "parameterTypes": []
        },
        {
          "name": "getVictimPlayerUuid",
          "parameterTypes": []
        },
        {
          "name": "getWeaponName",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.tables.pojos.MaxConsMonthView",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.UUID",
            "java.lang.Integer",
            "java.lang.String"
          ]
        },
        {
          "name": "getMaxCons",
          "parameterTypes": []
        },
        {
          "name": "getPName",
          "parameterTypes": []
        },
        {
          "name": "getPUuid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.tables.pojos.Queuelength",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.time.OffsetDateTime",
            "java.lang.Short",
            "java.lang.Short"
          ]
        },
        {
          "name": "getPrio",
          "parameterTypes": []
        },
        {
          "name": "getRegular",
          "parameterTypes": []
        },
        {
          "name": "getTime",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.tables.records.DeathsRecord",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.tables.records.GetUuidDataRecord",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.tables.records.LastSeenRecord",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.tables.records.MaxConsMonthViewRecord",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.tables.records.PlayerStatsRecord",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.tables.records.PlaytimeMonthRecord",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.tables.records.PriorityPlayersViewRecord",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.tables.records.QueuelengthRecord",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.tables.records.TablistRecord",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.tables.records.TopDeathsMonthViewRecord",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.data.dto.tables.records.TopKillsMonthViewRecord",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.translators.CustomExceptionHandler",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "vc.util.PlayerLookup",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "vc.api.MojangRestClient",
            "vc.api.CraftheadRestClient",
            "vc.api.MinetoolsRestClient"
          ]
        }
      ]
    },
    {
      "type": "zipkin2.reporter.Encoding"
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.GenericArrayType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.ParameterizedType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.TypeVariable",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.WildcardType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.sql.Connection"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.context.properties.ConfigurationProperties"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.test.context.SpringBootTest"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.cache.annotation.Cacheable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.jdbc.datasource.ConnectionProxy"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.test.context.BootstrapWith"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ControllerAdvice"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RequestMapping"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RequestParam"
        ]
      }
    }
  ],
  "serialization": [
    {
      "type": "byte[]"
    },
    {
      "type": "java.lang.Boolean"
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.StackTraceElement"
    },
    {
      "type": "java.lang.StackTraceElement[]"
    },
    {
      "type": "java.lang.String"
    },
    {
      "type": "java.lang.Throwable"
    },
    {
      "type": "java.rmi.MarshalledObject"
    },
    {
      "type": "java.rmi.dgc.Lease"
    },
    {
      "type": "java.rmi.dgc.VMID"
    },
    {
      "type": "java.rmi.server.ObjID"
    },
    {
      "type": "java.rmi.server.ObjID[]"
    },
    {
      "type": "java.rmi.server.RemoteObject"
    },
    {
      "type": "java.rmi.server.RemoteStub"
    },
    {
      "type": "java.rmi.server.UID"
    },
    {
      "type": "java.util.Collections$EmptyList"
    },
    {
      "type": "java.util.HashSet"
    },
    {
      "type": "javax.management.InstanceNotFoundException"
    },
    {
      "type": "javax.management.JMException"
    },
    {
      "type": "javax.management.ObjectName"
    },
    {
      "type": "javax.management.OperationsException"
    },
    {
      "type": "javax.management.remote.rmi.RMIConnectionImpl_Stub"
    },
    {
      "type": "javax.management.remote.rmi.RMIServerImpl_Stub"
    },
    {
      "type": "org.junit.platform.launcher.TestIdentifier$SerializedForm"
    }
  ],
  "jni": [
    {
      "type": "[Lcom.sun.management.internal.DiagnosticCommandArgumentInfo;"
    },
    {
      "type": "[Lcom.sun.management.internal.DiagnosticCommandInfo;"
    },
    {
      "type": "com.intellij.rt.junit.JUnitStarter",
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "com.sun.management.internal.DiagnosticCommandArgumentInfo",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean",
            "boolean",
            "boolean",
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.management.internal.DiagnosticCommandInfo",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.InternalError",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.util.Arrays",
      "methods": [
        {
          "name": "asList",
          "parameterTypes": [
            "java.lang.Object[]"
          ]
        }
      ]
    },
    {
      "type": "org.apache.maven.surefire.booter.ForkedBooter",
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "sun.instrument.InstrumentationImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "boolean",
            "boolean",
            "boolean"
          ]
        },
        {
          "name": "loadClassAndCallAgentmain",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "loadClassAndCallPremain",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "transform",
          "parameterTypes": [
            "java.lang.Module",
            "java.lang.ClassLoader",
            "java.lang.String",
            "java.lang.Class",
            "java.security.ProtectionDomain",
            "byte[]",
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "sun.launcher.LauncherHelper",
      "fields": [
        {
          "name": "isStaticMain"
        },
        {
          "name": "noArgMain"
        }
      ],
      "methods": [
        {
          "name": "checkAndLoadMain",
          "parameterTypes": [
            "boolean",
            "int",
            "java.lang.String"
          ]
        },
        {
          "name": "getApplicationClass",
          "parameterTypes": []
        },
        {
          "name": "makePlatformString",
          "parameterTypes": [
            "boolean",
            "byte[]"
          ]
        }
      ]
    },
    {
      "type": "sun.management.VMManagementImpl",
      "fields": [
        {
          "name": "compTimeMonitoringSupport"
        },
        {
          "name": "currentThreadCpuTimeSupport"
        },
        {
          "name": "objectMonitorUsageSupport"
        },
        {
          "name": "otherThreadCpuTimeSupport"
        },
        {
          "name": "remoteDiagnosticCommandsSupport"
        },
        {
          "name": "synchronizerUsageSupport"
        },
        {
          "name": "threadAllocatedMemorySupport"
        },
        {
          "name": "threadContentionMonitoringSupport"
        }
      ]
    }
  ]
}