/*
 * This file is generated by jOOQ.
 */
package vc.data.dto.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Deaths implements Serializable {

    private static final long serialVersionUID = 1L;

    private final OffsetDateTime time;
    private final String deathMessage;
    private final String victimPlayerName;
    private final UUID victimPlayerUuid;
    private final String killerPlayerName;
    private final UUID killerPlayerUuid;
    private final String weaponName;
    private final String killerMob;

    public Deaths(Deaths value) {
        this.time = value.time;
        this.deathMessage = value.deathMessage;
        this.victimPlayerName = value.victimPlayerName;
        this.victimPlayerUuid = value.victimPlayerUuid;
        this.killerPlayerName = value.killerPlayerName;
        this.killerPlayerUuid = value.killerPlayerUuid;
        this.weaponName = value.weaponName;
        this.killerMob = value.killerMob;
    }

    public Deaths(
        OffsetDateTime time,
        String deathMessage,
        String victimPlayerName,
        UUID victimPlayerUuid,
        String killerPlayerName,
        UUID killerPlayerUuid,
        String weaponName,
        String killerMob
    ) {
        this.time = time;
        this.deathMessage = deathMessage;
        this.victimPlayerName = victimPlayerName;
        this.victimPlayerUuid = victimPlayerUuid;
        this.killerPlayerName = killerPlayerName;
        this.killerPlayerUuid = killerPlayerUuid;
        this.weaponName = weaponName;
        this.killerMob = killerMob;
    }

    /**
     * Getter for <code>public.deaths.time</code>.
     */
    public OffsetDateTime getTime() {
        return this.time;
    }

    /**
     * Getter for <code>public.deaths.death_message</code>.
     */
    public String getDeathMessage() {
        return this.deathMessage;
    }

    /**
     * Getter for <code>public.deaths.victim_player_name</code>.
     */
    public String getVictimPlayerName() {
        return this.victimPlayerName;
    }

    /**
     * Getter for <code>public.deaths.victim_player_uuid</code>.
     */
    public UUID getVictimPlayerUuid() {
        return this.victimPlayerUuid;
    }

    /**
     * Getter for <code>public.deaths.killer_player_name</code>.
     */
    public String getKillerPlayerName() {
        return this.killerPlayerName;
    }

    /**
     * Getter for <code>public.deaths.killer_player_uuid</code>.
     */
    public UUID getKillerPlayerUuid() {
        return this.killerPlayerUuid;
    }

    /**
     * Getter for <code>public.deaths.weapon_name</code>.
     */
    public String getWeaponName() {
        return this.weaponName;
    }

    /**
     * Getter for <code>public.deaths.killer_mob</code>.
     */
    public String getKillerMob() {
        return this.killerMob;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Deaths other = (Deaths) obj;
        if (this.time == null) {
            if (other.time != null)
                return false;
        }
        else if (!this.time.equals(other.time))
            return false;
        if (this.deathMessage == null) {
            if (other.deathMessage != null)
                return false;
        }
        else if (!this.deathMessage.equals(other.deathMessage))
            return false;
        if (this.victimPlayerName == null) {
            if (other.victimPlayerName != null)
                return false;
        }
        else if (!this.victimPlayerName.equals(other.victimPlayerName))
            return false;
        if (this.victimPlayerUuid == null) {
            if (other.victimPlayerUuid != null)
                return false;
        }
        else if (!this.victimPlayerUuid.equals(other.victimPlayerUuid))
            return false;
        if (this.killerPlayerName == null) {
            if (other.killerPlayerName != null)
                return false;
        }
        else if (!this.killerPlayerName.equals(other.killerPlayerName))
            return false;
        if (this.killerPlayerUuid == null) {
            if (other.killerPlayerUuid != null)
                return false;
        }
        else if (!this.killerPlayerUuid.equals(other.killerPlayerUuid))
            return false;
        if (this.weaponName == null) {
            if (other.weaponName != null)
                return false;
        }
        else if (!this.weaponName.equals(other.weaponName))
            return false;
        if (this.killerMob == null) {
            if (other.killerMob != null)
                return false;
        }
        else if (!this.killerMob.equals(other.killerMob))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.time == null) ? 0 : this.time.hashCode());
        result = prime * result + ((this.deathMessage == null) ? 0 : this.deathMessage.hashCode());
        result = prime * result + ((this.victimPlayerName == null) ? 0 : this.victimPlayerName.hashCode());
        result = prime * result + ((this.victimPlayerUuid == null) ? 0 : this.victimPlayerUuid.hashCode());
        result = prime * result + ((this.killerPlayerName == null) ? 0 : this.killerPlayerName.hashCode());
        result = prime * result + ((this.killerPlayerUuid == null) ? 0 : this.killerPlayerUuid.hashCode());
        result = prime * result + ((this.weaponName == null) ? 0 : this.weaponName.hashCode());
        result = prime * result + ((this.killerMob == null) ? 0 : this.killerMob.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Deaths (");

        sb.append(time);
        sb.append(", ").append(deathMessage);
        sb.append(", ").append(victimPlayerName);
        sb.append(", ").append(victimPlayerUuid);
        sb.append(", ").append(killerPlayerName);
        sb.append(", ").append(killerPlayerUuid);
        sb.append(", ").append(weaponName);
        sb.append(", ").append(killerMob);

        sb.append(")");
        return sb.toString();
    }
}
