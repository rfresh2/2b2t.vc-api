/*
 * This file is generated by jOOQ.
 */
package vc.data.dto.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Queuewait implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final String playerName;
    private final Boolean prio;
    private final OffsetDateTime startQueueTime;
    private final OffsetDateTime endQueueTime;
    private final Long queueTime;
    private final Integer initialQueueLen;

    public Queuewait(Queuewait value) {
        this.id = value.id;
        this.playerName = value.playerName;
        this.prio = value.prio;
        this.startQueueTime = value.startQueueTime;
        this.endQueueTime = value.endQueueTime;
        this.queueTime = value.queueTime;
        this.initialQueueLen = value.initialQueueLen;
    }

    public Queuewait(
        Integer id,
        String playerName,
        Boolean prio,
        OffsetDateTime startQueueTime,
        OffsetDateTime endQueueTime,
        Long queueTime,
        Integer initialQueueLen
    ) {
        this.id = id;
        this.playerName = playerName;
        this.prio = prio;
        this.startQueueTime = startQueueTime;
        this.endQueueTime = endQueueTime;
        this.queueTime = queueTime;
        this.initialQueueLen = initialQueueLen;
    }

    /**
     * Getter for <code>public.queuewait.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.queuewait.player_name</code>.
     */
    public String getPlayerName() {
        return this.playerName;
    }

    /**
     * Getter for <code>public.queuewait.prio</code>.
     */
    public Boolean getPrio() {
        return this.prio;
    }

    /**
     * Getter for <code>public.queuewait.start_queue_time</code>.
     */
    public OffsetDateTime getStartQueueTime() {
        return this.startQueueTime;
    }

    /**
     * Getter for <code>public.queuewait.end_queue_time</code>.
     */
    public OffsetDateTime getEndQueueTime() {
        return this.endQueueTime;
    }

    /**
     * Getter for <code>public.queuewait.queue_time</code>.
     */
    public Long getQueueTime() {
        return this.queueTime;
    }

    /**
     * Getter for <code>public.queuewait.initial_queue_len</code>.
     */
    public Integer getInitialQueueLen() {
        return this.initialQueueLen;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Queuewait other = (Queuewait) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.playerName == null) {
            if (other.playerName != null)
                return false;
        }
        else if (!this.playerName.equals(other.playerName))
            return false;
        if (this.prio == null) {
            if (other.prio != null)
                return false;
        }
        else if (!this.prio.equals(other.prio))
            return false;
        if (this.startQueueTime == null) {
            if (other.startQueueTime != null)
                return false;
        }
        else if (!this.startQueueTime.equals(other.startQueueTime))
            return false;
        if (this.endQueueTime == null) {
            if (other.endQueueTime != null)
                return false;
        }
        else if (!this.endQueueTime.equals(other.endQueueTime))
            return false;
        if (this.queueTime == null) {
            if (other.queueTime != null)
                return false;
        }
        else if (!this.queueTime.equals(other.queueTime))
            return false;
        if (this.initialQueueLen == null) {
            if (other.initialQueueLen != null)
                return false;
        }
        else if (!this.initialQueueLen.equals(other.initialQueueLen))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.playerName == null) ? 0 : this.playerName.hashCode());
        result = prime * result + ((this.prio == null) ? 0 : this.prio.hashCode());
        result = prime * result + ((this.startQueueTime == null) ? 0 : this.startQueueTime.hashCode());
        result = prime * result + ((this.endQueueTime == null) ? 0 : this.endQueueTime.hashCode());
        result = prime * result + ((this.queueTime == null) ? 0 : this.queueTime.hashCode());
        result = prime * result + ((this.initialQueueLen == null) ? 0 : this.initialQueueLen.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Queuewait (");

        sb.append(id);
        sb.append(", ").append(playerName);
        sb.append(", ").append(prio);
        sb.append(", ").append(startQueueTime);
        sb.append(", ").append(endQueueTime);
        sb.append(", ").append(queueTime);
        sb.append(", ").append(initialQueueLen);

        sb.append(")");
        return sb.toString();
    }
}
