/*
 * This file is generated by jOOQ.
 */
package vc.data.dto.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PlayerStats implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long joinCount;
    private final Long leaveCount;
    private final Long deathCount;
    private final Long killCount;
    private final OffsetDateTime firstSeen;
    private final OffsetDateTime lastSeen;
    private final Integer playtime;
    private final Integer playtime_30Days;
    private final Long chatsCount;

    public PlayerStats(PlayerStats value) {
        this.joinCount = value.joinCount;
        this.leaveCount = value.leaveCount;
        this.deathCount = value.deathCount;
        this.killCount = value.killCount;
        this.firstSeen = value.firstSeen;
        this.lastSeen = value.lastSeen;
        this.playtime = value.playtime;
        this.playtime_30Days = value.playtime_30Days;
        this.chatsCount = value.chatsCount;
    }

    public PlayerStats(
        Long joinCount,
        Long leaveCount,
        Long deathCount,
        Long killCount,
        OffsetDateTime firstSeen,
        OffsetDateTime lastSeen,
        Integer playtime,
        Integer playtime_30Days,
        Long chatsCount
    ) {
        this.joinCount = joinCount;
        this.leaveCount = leaveCount;
        this.deathCount = deathCount;
        this.killCount = killCount;
        this.firstSeen = firstSeen;
        this.lastSeen = lastSeen;
        this.playtime = playtime;
        this.playtime_30Days = playtime_30Days;
        this.chatsCount = chatsCount;
    }

    /**
     * Getter for <code>public.player_stats.join_count</code>.
     */
    public Long getJoinCount() {
        return this.joinCount;
    }

    /**
     * Getter for <code>public.player_stats.leave_count</code>.
     */
    public Long getLeaveCount() {
        return this.leaveCount;
    }

    /**
     * Getter for <code>public.player_stats.death_count</code>.
     */
    public Long getDeathCount() {
        return this.deathCount;
    }

    /**
     * Getter for <code>public.player_stats.kill_count</code>.
     */
    public Long getKillCount() {
        return this.killCount;
    }

    /**
     * Getter for <code>public.player_stats.first_seen</code>.
     */
    public OffsetDateTime getFirstSeen() {
        return this.firstSeen;
    }

    /**
     * Getter for <code>public.player_stats.last_seen</code>.
     */
    public OffsetDateTime getLastSeen() {
        return this.lastSeen;
    }

    /**
     * Getter for <code>public.player_stats.playtime</code>.
     */
    public Integer getPlaytime() {
        return this.playtime;
    }

    /**
     * Getter for <code>public.player_stats.playtime_30_days</code>.
     */
    public Integer getPlaytime_30Days() {
        return this.playtime_30Days;
    }

    /**
     * Getter for <code>public.player_stats.chats_count</code>.
     */
    public Long getChatsCount() {
        return this.chatsCount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PlayerStats other = (PlayerStats) obj;
        if (this.joinCount == null) {
            if (other.joinCount != null)
                return false;
        }
        else if (!this.joinCount.equals(other.joinCount))
            return false;
        if (this.leaveCount == null) {
            if (other.leaveCount != null)
                return false;
        }
        else if (!this.leaveCount.equals(other.leaveCount))
            return false;
        if (this.deathCount == null) {
            if (other.deathCount != null)
                return false;
        }
        else if (!this.deathCount.equals(other.deathCount))
            return false;
        if (this.killCount == null) {
            if (other.killCount != null)
                return false;
        }
        else if (!this.killCount.equals(other.killCount))
            return false;
        if (this.firstSeen == null) {
            if (other.firstSeen != null)
                return false;
        }
        else if (!this.firstSeen.equals(other.firstSeen))
            return false;
        if (this.lastSeen == null) {
            if (other.lastSeen != null)
                return false;
        }
        else if (!this.lastSeen.equals(other.lastSeen))
            return false;
        if (this.playtime == null) {
            if (other.playtime != null)
                return false;
        }
        else if (!this.playtime.equals(other.playtime))
            return false;
        if (this.playtime_30Days == null) {
            if (other.playtime_30Days != null)
                return false;
        }
        else if (!this.playtime_30Days.equals(other.playtime_30Days))
            return false;
        if (this.chatsCount == null) {
            if (other.chatsCount != null)
                return false;
        }
        else if (!this.chatsCount.equals(other.chatsCount))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.joinCount == null) ? 0 : this.joinCount.hashCode());
        result = prime * result + ((this.leaveCount == null) ? 0 : this.leaveCount.hashCode());
        result = prime * result + ((this.deathCount == null) ? 0 : this.deathCount.hashCode());
        result = prime * result + ((this.killCount == null) ? 0 : this.killCount.hashCode());
        result = prime * result + ((this.firstSeen == null) ? 0 : this.firstSeen.hashCode());
        result = prime * result + ((this.lastSeen == null) ? 0 : this.lastSeen.hashCode());
        result = prime * result + ((this.playtime == null) ? 0 : this.playtime.hashCode());
        result = prime * result + ((this.playtime_30Days == null) ? 0 : this.playtime_30Days.hashCode());
        result = prime * result + ((this.chatsCount == null) ? 0 : this.chatsCount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PlayerStats (");

        sb.append(joinCount);
        sb.append(", ").append(leaveCount);
        sb.append(", ").append(deathCount);
        sb.append(", ").append(killCount);
        sb.append(", ").append(firstSeen);
        sb.append(", ").append(lastSeen);
        sb.append(", ").append(playtime);
        sb.append(", ").append(playtime_30Days);
        sb.append(", ").append(chatsCount);

        sb.append(")");
        return sb.toString();
    }
}
