/*
 * This file is generated by jOOQ.
 */
package vc.data.dto.tables;


import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import vc.data.dto.Public;
import vc.data.dto.tables.records.MaxConsMonthViewRecord;

import java.util.Collection;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MaxConsMonthView extends TableImpl<MaxConsMonthViewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.max_cons_month_view</code>
     */
    public static final MaxConsMonthView MAX_CONS_MONTH_VIEW = new MaxConsMonthView();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MaxConsMonthViewRecord> getRecordType() {
        return MaxConsMonthViewRecord.class;
    }

    /**
     * The column <code>public.max_cons_month_view.p_uuid</code>.
     */
    public final TableField<MaxConsMonthViewRecord, UUID> P_UUID = createField(DSL.name("p_uuid"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public.max_cons_month_view.max_cons</code>.
     */
    public final TableField<MaxConsMonthViewRecord, Integer> MAX_CONS = createField(DSL.name("max_cons"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.max_cons_month_view.p_name</code>.
     */
    public final TableField<MaxConsMonthViewRecord, String> P_NAME = createField(DSL.name("p_name"), SQLDataType.CLOB, this, "");

    private MaxConsMonthView(Name alias, Table<MaxConsMonthViewRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private MaxConsMonthView(Name alias, Table<MaxConsMonthViewRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView(), where);
    }

    /**
     * Create an aliased <code>public.max_cons_month_view</code> table reference
     */
    public MaxConsMonthView(String alias) {
        this(DSL.name(alias), MAX_CONS_MONTH_VIEW);
    }

    /**
     * Create an aliased <code>public.max_cons_month_view</code> table reference
     */
    public MaxConsMonthView(Name alias) {
        this(alias, MAX_CONS_MONTH_VIEW);
    }

    /**
     * Create a <code>public.max_cons_month_view</code> table reference
     */
    public MaxConsMonthView() {
        this(DSL.name("max_cons_month_view"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public MaxConsMonthView as(String alias) {
        return new MaxConsMonthView(DSL.name(alias), this);
    }

    @Override
    public MaxConsMonthView as(Name alias) {
        return new MaxConsMonthView(alias, this);
    }

    @Override
    public MaxConsMonthView as(Table<?> alias) {
        return new MaxConsMonthView(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public MaxConsMonthView rename(String name) {
        return new MaxConsMonthView(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MaxConsMonthView rename(Name name) {
        return new MaxConsMonthView(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public MaxConsMonthView rename(Table<?> name) {
        return new MaxConsMonthView(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public MaxConsMonthView where(Condition condition) {
        return new MaxConsMonthView(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public MaxConsMonthView where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public MaxConsMonthView where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public MaxConsMonthView where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public MaxConsMonthView where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public MaxConsMonthView where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public MaxConsMonthView where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public MaxConsMonthView where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public MaxConsMonthView whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public MaxConsMonthView whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
