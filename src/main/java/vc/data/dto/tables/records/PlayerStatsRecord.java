/*
 * This file is generated by jOOQ.
 */
package vc.data.dto.tables.records;


import org.jooq.Field;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.TableRecordImpl;
import vc.data.dto.tables.PlayerStats;

import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PlayerStatsRecord extends TableRecordImpl<PlayerStatsRecord> implements Record9<Long, Long, Long, Long, OffsetDateTime, OffsetDateTime, Integer, Integer, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.player_stats.join_count</code>.
     */
    public PlayerStatsRecord setJoinCount(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.player_stats.join_count</code>.
     */
    public Long getJoinCount() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.player_stats.leave_count</code>.
     */
    public PlayerStatsRecord setLeaveCount(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.player_stats.leave_count</code>.
     */
    public Long getLeaveCount() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.player_stats.death_count</code>.
     */
    public PlayerStatsRecord setDeathCount(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.player_stats.death_count</code>.
     */
    public Long getDeathCount() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.player_stats.kill_count</code>.
     */
    public PlayerStatsRecord setKillCount(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.player_stats.kill_count</code>.
     */
    public Long getKillCount() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.player_stats.first_seen</code>.
     */
    public PlayerStatsRecord setFirstSeen(OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.player_stats.first_seen</code>.
     */
    public OffsetDateTime getFirstSeen() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.player_stats.last_seen</code>.
     */
    public PlayerStatsRecord setLastSeen(OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.player_stats.last_seen</code>.
     */
    public OffsetDateTime getLastSeen() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>public.player_stats.playtime</code>.
     */
    public PlayerStatsRecord setPlaytime(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.player_stats.playtime</code>.
     */
    public Integer getPlaytime() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.player_stats.playtime_30_days</code>.
     */
    public PlayerStatsRecord setPlaytime_30Days(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.player_stats.playtime_30_days</code>.
     */
    public Integer getPlaytime_30Days() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.player_stats.chats_count</code>.
     */
    public PlayerStatsRecord setChatsCount(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.player_stats.chats_count</code>.
     */
    public Long getChatsCount() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Long, Long, OffsetDateTime, OffsetDateTime, Integer, Integer, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Long, Long, Long, OffsetDateTime, OffsetDateTime, Integer, Integer, Long> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PlayerStats.PLAYER_STATS.JOIN_COUNT;
    }

    @Override
    public Field<Long> field2() {
        return PlayerStats.PLAYER_STATS.LEAVE_COUNT;
    }

    @Override
    public Field<Long> field3() {
        return PlayerStats.PLAYER_STATS.DEATH_COUNT;
    }

    @Override
    public Field<Long> field4() {
        return PlayerStats.PLAYER_STATS.KILL_COUNT;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return PlayerStats.PLAYER_STATS.FIRST_SEEN;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return PlayerStats.PLAYER_STATS.LAST_SEEN;
    }

    @Override
    public Field<Integer> field7() {
        return PlayerStats.PLAYER_STATS.PLAYTIME;
    }

    @Override
    public Field<Integer> field8() {
        return PlayerStats.PLAYER_STATS.PLAYTIME_30_DAYS;
    }

    @Override
    public Field<Long> field9() {
        return PlayerStats.PLAYER_STATS.CHATS_COUNT;
    }

    @Override
    public Long component1() {
        return getJoinCount();
    }

    @Override
    public Long component2() {
        return getLeaveCount();
    }

    @Override
    public Long component3() {
        return getDeathCount();
    }

    @Override
    public Long component4() {
        return getKillCount();
    }

    @Override
    public OffsetDateTime component5() {
        return getFirstSeen();
    }

    @Override
    public OffsetDateTime component6() {
        return getLastSeen();
    }

    @Override
    public Integer component7() {
        return getPlaytime();
    }

    @Override
    public Integer component8() {
        return getPlaytime_30Days();
    }

    @Override
    public Long component9() {
        return getChatsCount();
    }

    @Override
    public Long value1() {
        return getJoinCount();
    }

    @Override
    public Long value2() {
        return getLeaveCount();
    }

    @Override
    public Long value3() {
        return getDeathCount();
    }

    @Override
    public Long value4() {
        return getKillCount();
    }

    @Override
    public OffsetDateTime value5() {
        return getFirstSeen();
    }

    @Override
    public OffsetDateTime value6() {
        return getLastSeen();
    }

    @Override
    public Integer value7() {
        return getPlaytime();
    }

    @Override
    public Integer value8() {
        return getPlaytime_30Days();
    }

    @Override
    public Long value9() {
        return getChatsCount();
    }

    @Override
    public PlayerStatsRecord value1(Long value) {
        setJoinCount(value);
        return this;
    }

    @Override
    public PlayerStatsRecord value2(Long value) {
        setLeaveCount(value);
        return this;
    }

    @Override
    public PlayerStatsRecord value3(Long value) {
        setDeathCount(value);
        return this;
    }

    @Override
    public PlayerStatsRecord value4(Long value) {
        setKillCount(value);
        return this;
    }

    @Override
    public PlayerStatsRecord value5(OffsetDateTime value) {
        setFirstSeen(value);
        return this;
    }

    @Override
    public PlayerStatsRecord value6(OffsetDateTime value) {
        setLastSeen(value);
        return this;
    }

    @Override
    public PlayerStatsRecord value7(Integer value) {
        setPlaytime(value);
        return this;
    }

    @Override
    public PlayerStatsRecord value8(Integer value) {
        setPlaytime_30Days(value);
        return this;
    }

    @Override
    public PlayerStatsRecord value9(Long value) {
        setChatsCount(value);
        return this;
    }

    @Override
    public PlayerStatsRecord values(Long value1, Long value2, Long value3, Long value4, OffsetDateTime value5, OffsetDateTime value6, Integer value7, Integer value8, Long value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerStatsRecord
     */
    public PlayerStatsRecord() {
        super(PlayerStats.PLAYER_STATS);
    }

    /**
     * Create a detached, initialised PlayerStatsRecord
     */
    public PlayerStatsRecord(Long joinCount, Long leaveCount, Long deathCount, Long killCount, OffsetDateTime firstSeen, OffsetDateTime lastSeen, Integer playtime, Integer playtime_30Days, Long chatsCount) {
        super(PlayerStats.PLAYER_STATS);

        setJoinCount(joinCount);
        setLeaveCount(leaveCount);
        setDeathCount(deathCount);
        setKillCount(killCount);
        setFirstSeen(firstSeen);
        setLastSeen(lastSeen);
        setPlaytime(playtime);
        setPlaytime_30Days(playtime_30Days);
        setChatsCount(chatsCount);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PlayerStatsRecord
     */
    public PlayerStatsRecord(vc.data.dto.tables.pojos.PlayerStats value) {
        super(PlayerStats.PLAYER_STATS);

        if (value != null) {
            setJoinCount(value.getJoinCount());
            setLeaveCount(value.getLeaveCount());
            setDeathCount(value.getDeathCount());
            setKillCount(value.getKillCount());
            setFirstSeen(value.getFirstSeen());
            setLastSeen(value.getLastSeen());
            setPlaytime(value.getPlaytime());
            setPlaytime_30Days(value.getPlaytime_30Days());
            setChatsCount(value.getChatsCount());
            resetChangedOnNotNull();
        }
    }
}
