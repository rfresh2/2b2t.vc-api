/*
 * This file is generated by jOOQ.
 */
package vc.data.dto.tables.records;


import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;
import vc.data.dto.tables.OnlinePlayers;

import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OnlinePlayersRecord extends TableRecordImpl<OnlinePlayersRecord> implements Record3<String, UUID, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.online_players.player_name</code>.
     */
    public OnlinePlayersRecord setPlayerName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.online_players.player_name</code>.
     */
    public String getPlayerName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.online_players.player_uuid</code>.
     */
    public OnlinePlayersRecord setPlayerUuid(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.online_players.player_uuid</code>.
     */
    public UUID getPlayerUuid() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.online_players.join_time</code>.
     */
    public OnlinePlayersRecord setJoinTime(OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.online_players.join_time</code>.
     */
    public OffsetDateTime getJoinTime() {
        return (OffsetDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, UUID, OffsetDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, UUID, OffsetDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return OnlinePlayers.ONLINE_PLAYERS.PLAYER_NAME;
    }

    @Override
    public Field<UUID> field2() {
        return OnlinePlayers.ONLINE_PLAYERS.PLAYER_UUID;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return OnlinePlayers.ONLINE_PLAYERS.JOIN_TIME;
    }

    @Override
    public String component1() {
        return getPlayerName();
    }

    @Override
    public UUID component2() {
        return getPlayerUuid();
    }

    @Override
    public OffsetDateTime component3() {
        return getJoinTime();
    }

    @Override
    public String value1() {
        return getPlayerName();
    }

    @Override
    public UUID value2() {
        return getPlayerUuid();
    }

    @Override
    public OffsetDateTime value3() {
        return getJoinTime();
    }

    @Override
    public OnlinePlayersRecord value1(String value) {
        setPlayerName(value);
        return this;
    }

    @Override
    public OnlinePlayersRecord value2(UUID value) {
        setPlayerUuid(value);
        return this;
    }

    @Override
    public OnlinePlayersRecord value3(OffsetDateTime value) {
        setJoinTime(value);
        return this;
    }

    @Override
    public OnlinePlayersRecord values(String value1, UUID value2, OffsetDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OnlinePlayersRecord
     */
    public OnlinePlayersRecord() {
        super(OnlinePlayers.ONLINE_PLAYERS);
    }

    /**
     * Create a detached, initialised OnlinePlayersRecord
     */
    public OnlinePlayersRecord(String playerName, UUID playerUuid, OffsetDateTime joinTime) {
        super(OnlinePlayers.ONLINE_PLAYERS);

        setPlayerName(playerName);
        setPlayerUuid(playerUuid);
        setJoinTime(joinTime);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised OnlinePlayersRecord
     */
    public OnlinePlayersRecord(vc.data.dto.tables.pojos.OnlinePlayers value) {
        super(OnlinePlayers.ONLINE_PLAYERS);

        if (value != null) {
            setPlayerName(value.getPlayerName());
            setPlayerUuid(value.getPlayerUuid());
            setJoinTime(value.getJoinTime());
            resetChangedOnNotNull();
        }
    }
}
