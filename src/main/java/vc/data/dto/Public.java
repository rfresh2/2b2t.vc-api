/*
 * This file is generated by jOOQ.
 */
package vc.data.dto;


import org.jooq.*;
import org.jooq.impl.SchemaImpl;
import vc.data.dto.tables.*;
import vc.data.dto.tables.records.GetUuidDataRecord;
import vc.data.dto.tables.records.PlayerStatsRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.chats</code>.
     */
    public final Chats CHATS = Chats.CHATS;

    /**
     * The table <code>public.connections</code>.
     */
    public final Connections CONNECTIONS = Connections.CONNECTIONS;

    /**
     * The table <code>public.deaths</code>.
     */
    public final Deaths DEATHS = Deaths.DEATHS;

    /**
     * The table <code>public.get_uuid_data</code>.
     */
    public final GetUuidData GET_UUID_DATA = GetUuidData.GET_UUID_DATA;

    /**
     * Call <code>public.get_uuid_data</code>.
     */
    public static Result<GetUuidDataRecord> GET_UUID_DATA(
          Configuration configuration
        , UUID pUuid
    ) {
        return configuration.dsl().selectFrom(vc.data.dto.tables.GetUuidData.GET_UUID_DATA.call(
              pUuid
        )).fetch();
    }

    /**
     * Get <code>public.get_uuid_data</code> as a table.
     */
    public static GetUuidData GET_UUID_DATA(
          UUID pUuid
    ) {
        return vc.data.dto.tables.GetUuidData.GET_UUID_DATA.call(
            pUuid
        );
    }

    /**
     * Get <code>public.get_uuid_data</code> as a table.
     */
    public static GetUuidData GET_UUID_DATA(
          Field<UUID> pUuid
    ) {
        return vc.data.dto.tables.GetUuidData.GET_UUID_DATA.call(
            pUuid
        );
    }

    /**
     * The table <code>public.max_cons_month_view</code>.
     */
    public final MaxConsMonthView MAX_CONS_MONTH_VIEW = MaxConsMonthView.MAX_CONS_MONTH_VIEW;

    /**
     * The table <code>public.names</code>.
     */
    public final Names NAMES = Names.NAMES;

    /**
     * The table <code>public.online_players</code>.
     */
    public final OnlinePlayers ONLINE_PLAYERS = OnlinePlayers.ONLINE_PLAYERS;

    /**
     * The table <code>public.player_stats</code>.
     */
    public final PlayerStats PLAYER_STATS = PlayerStats.PLAYER_STATS;

    /**
     * Call <code>public.player_stats</code>.
     */
    public static Result<PlayerStatsRecord> PLAYER_STATS(
          Configuration configuration
        , UUID pUuid
    ) {
        return configuration.dsl().selectFrom(vc.data.dto.tables.PlayerStats.PLAYER_STATS.call(
              pUuid
        )).fetch();
    }

    /**
     * Get <code>public.player_stats</code> as a table.
     */
    public static PlayerStats PLAYER_STATS(
          UUID pUuid
    ) {
        return vc.data.dto.tables.PlayerStats.PLAYER_STATS.call(
            pUuid
        );
    }

    /**
     * Get <code>public.player_stats</code> as a table.
     */
    public static PlayerStats PLAYER_STATS(
          Field<UUID> pUuid
    ) {
        return vc.data.dto.tables.PlayerStats.PLAYER_STATS.call(
            pUuid
        );
    }

    /**
     * The table <code>public.playercount</code>.
     */
    public final Playercount PLAYERCOUNT = Playercount.PLAYERCOUNT;

    /**
     * The table <code>public.playtime_month_view</code>.
     */
    public final PlaytimeMonthView PLAYTIME_MONTH_VIEW = PlaytimeMonthView.PLAYTIME_MONTH_VIEW;

    /**
     * The table <code>public.queuelength</code>.
     */
    public final Queuelength QUEUELENGTH = Queuelength.QUEUELENGTH;

    /**
     * The table <code>public.queuewait</code>.
     */
    public final Queuewait QUEUEWAIT = Queuewait.QUEUEWAIT;

    /**
     * The table <code>public.restarts</code>.
     */
    public final Restarts RESTARTS = Restarts.RESTARTS;

    /**
     * The table <code>public.tablist</code>.
     */
    public final Tablist TABLIST = Tablist.TABLIST;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Chats.CHATS,
            Connections.CONNECTIONS,
            Deaths.DEATHS,
            GetUuidData.GET_UUID_DATA,
            MaxConsMonthView.MAX_CONS_MONTH_VIEW,
            Names.NAMES,
            OnlinePlayers.ONLINE_PLAYERS,
            PlayerStats.PLAYER_STATS,
            Playercount.PLAYERCOUNT,
            PlaytimeMonthView.PLAYTIME_MONTH_VIEW,
            Queuelength.QUEUELENGTH,
            Queuewait.QUEUEWAIT,
            Restarts.RESTARTS,
            Tablist.TABLIST
        );
    }
}
